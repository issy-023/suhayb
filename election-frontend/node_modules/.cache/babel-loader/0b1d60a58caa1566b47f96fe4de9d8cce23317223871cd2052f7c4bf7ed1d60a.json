{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"filter-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"chat-container\"\n};\nconst _hoisted_5 = {\n  class: \"chat-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"chat-item-container\"\n};\nconst _hoisted_8 = {\n  class: \"new-chat-container\"\n};\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_11 = {\n  class: \"modal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Filter by Party\", -1)), _createElementVNode(\"div\", {\n    class: \"party-filter\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.filterAllParties && $options.filterAllParties(...args))\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"p\", null, \"All Parties\", -1)])), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.parties, party => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: party,\n      class: \"party-filter\",\n      onClick: $event => $options.filterByParty(party)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(party), 1)], 8, _hoisted_3);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Chats Overview\", -1)), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredChats, (chat, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-item\",\n      onClick: $event => $options.openChat(chat)\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h3\", null, _toDisplayString(chat.name) + \" - \" + _toDisplayString(chat.party), 1), _createElementVNode(\"p\", null, _toDisplayString(chat.description), 1)])], 8, _hoisted_6);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Create a New Chat\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newChatName = $event),\n    placeholder: \"Enter chat name\",\n    class: \"chat-input\"\n  }, null, 512), [[_vModelText, $data.newChatName]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newChatDescription = $event),\n    placeholder: \"Enter chat description\",\n    class: \"chat-input\",\n    rows: \"3\"\n  }, null, 512), [[_vModelText, $data.newChatDescription]]), _cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"party\"\n  }, \"Select party:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newChatParty = $event),\n    class: \"chat-input\"\n  }, [_cache[9] || (_cache[9] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Select a party\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.parties, party => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: party,\n      value: party\n    }, _toDisplayString(party), 9, _hoisted_9);\n  }), 128))], 512), [[_vModelSelect, $data.newChatParty]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.openNewChat && $options.openNewChat(...args))\n  }, \"Open new chat\")]), $data.showPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, _toDisplayString($data.popupMessage), 1), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closePopup && $options.closePopup(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","filterAllParties","_Fragment","_renderList","$data","parties","party","$event","filterByParty","_toDisplayString","_hoisted_3","_hoisted_4","_hoisted_5","filteredChats","chat","index","openChat","_hoisted_7","name","description","_hoisted_6","_hoisted_8","type","newChatName","placeholder","newChatDescription","rows","for","newChatParty","value","disabled","_hoisted_9","openNewChat","showPopup","_hoisted_10","_hoisted_11","popupMessage","closePopup","_createCommentVNode"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/ChatGroupComponent.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"filter-container\">\n      <h2>Filter by Party</h2>\n\n      <div class=\"party-filter\" @click=\"filterAllParties\">\n        <p>All Parties</p>\n      </div>\n\n      <div v-for=\"party in parties\" :key=\"party\" class=\"party-filter\" @click=\"filterByParty(party)\">\n        <p>{{ party }}</p>\n      </div>\n    </div>\n\n    <div class=\"chat-container\">\n      <h2>Chats Overview</h2>\n\n      <div class=\"chat-list\">\n        <div v-for=\"(chat, index) in filteredChats\" :key=\"index\" class=\"chat-item\" @click=\"openChat(chat)\">\n          <div class=\"chat-item-container\">\n            <h3>{{ chat.name }} - {{ chat.party }}</h3>\n            <p>{{ chat.description }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"new-chat-container\">\n      <h2>Create a New Chat</h2>\n      <input\n          type=\"text\"\n          v-model=\"newChatName\"\n          placeholder=\"Enter chat name\"\n          class=\"chat-input\"\n      />\n      <textarea\n          v-model=\"newChatDescription\"\n          placeholder=\"Enter chat description\"\n          class=\"chat-input\"\n          rows=\"3\"\n      ></textarea>\n      <label for=\"party\">Select party:</label>\n      <select v-model=\"newChatParty\" class=\"chat-input\">\n        <option value=\"\" disabled>Select a party</option>\n        <option v-for=\"party in parties\" :key=\"party\" :value=\"party\">{{ party }}</option>\n      </select>\n      <button @click=\"openNewChat\">Open new chat</button>\n    </div>\n\n    <div v-if=\"showPopup\" class=\"modal-overlay\">\n      <div class=\"modal\">\n        <p>{{ popupMessage }}</p>\n        <button @click=\"closePopup\">Close</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ChatGroupComponent\",\n  data() {\n    return {\n      chats: [\n        { id: 1, name: \"Chat 1\", description: \"This is the first chat\", party: \"VVD\", messages: [] },\n        { id: 2, name: \"Chat 2\", description: \"This is the second chat\", party: \"D66\", messages: [] },\n        { id: 3, name: \"Chat 3\", description: \"This is the third chat\", party: \"GroenLinks / PvdA\", messages: [] },\n        { id: 4, name: \"Chat 4\", description: \"This is the fourth chat\", party: \"PVV\", messages: [] }\n      ],\n      newChatName: \"\",\n      newChatDescription: \"\",\n      newChatParty: \"\",\n      selectedParty: \"\",\n      filteredChats: [],\n      showPopup: false,\n      popupMessage: \"\",\n      parties: [\n        \"VVD\",\n        \"D66\",\n        \"GROENLINKS / Partij van de Arbeid (PvdA)\",\n        \"PVV (Partij voor de Vrijheid)\",\n        \"CDA\",\n        \"SP (Socialistische Partij)\",\n        \"Forum voor Democratie\",\n        \"Partij voor de Dieren\",\n        \"ChristenUnie\",\n        \"Volt\",\n        \"JA21\",\n        \"Staatkundig Gereformeerde Partij (SGP)\",\n        \"DENK\",\n        \"50PLUS\",\n        \"BBB\",\n        \"BIJ1\",\n        \"Piratenpartij – De Groenen\",\n        \"BVNL / Groep Van Haga\",\n        \"Nieuw Sociaal Contract\",\n        \"Splinter\",\n        \"LP (Libertaire Partij)\",\n        \"LEF – Voor de Nieuwe Generatie\",\n        \"Samen voor Nederland\",\n        \"Nederland met een PLAN\",\n        \"PartijvdSport\",\n        \"Politieke Partij voor Basisinkomen\"\n      ]\n    };\n  },\n  mounted() {\n    this.filteredChats = this.chats;\n  },\n  methods: {\n    openNewChat() {\n      if (this.newChatName.trim() === \"\" || this.newChatParty === \"\") {\n        this.showPopupMessage(\"Please enter a name and select a party for the new chat.\");\n        return;\n      }\n      if (this.newChatDescription.trim() === \"\") {\n        this.showPopupMessage(\"Please add a description for the new chat.\");\n        return;\n      }\n\n      const newChat = {\n        id: this.chats.length + 1,\n        name: this.newChatName,\n        description: this.newChatDescription,\n        party: this.newChatParty,\n        messages: []\n      };\n      this.chats.unshift(newChat);\n      this.newChatName = \"\";\n      this.newChatDescription = \"\";\n      this.newChatParty = \"\";\n      this.filterChats();\n      this.showPopupMessage(\"New chat created successfully!\");\n    },\n    openChat(chat) {\n      this.$router.push({ name: 'ChatView', params: { chatId: chat.id } });\n    },\n    filterChats() {\n      if (this.selectedParty === \"\") {\n        this.filteredChats = this.chats;\n      } else {\n        this.filteredChats = this.chats.filter(chat => chat.party === this.selectedParty);\n      }\n    },\n    filterByParty(party) {\n      this.filteredChats = this.chats.filter(chat => chat.party === party);\n    },\n    filterAllParties() {\n      this.filteredChats = this.chats;\n    },\n    showPopupMessage(message) {\n      this.popupMessage = message;\n      this.showPopup = true;\n    },\n    closePopup() {\n      this.showPopup = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.filter-container {\n  width: 20%;\n  padding: 20px;\n  background-color: #f1f1f1;\n  border-radius: 8px;\n}\n\n.party-filter {\n  padding: 10px;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  text-align: center;\n}\n\n.party-filter:hover {\n  background-color: #f0f0f0;\n}\n\n.chat-container {\n  width: 60%;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.new-chat-container {\n  width: 20%;\n  height: 10%;\n  padding: 15px;\n  background-color: #f0f0f0;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.chat-input {\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  width: 100%;\n}\n\n.chat-item-container {\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #ff9933;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #e68a00;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal {\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\n.modal button {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}