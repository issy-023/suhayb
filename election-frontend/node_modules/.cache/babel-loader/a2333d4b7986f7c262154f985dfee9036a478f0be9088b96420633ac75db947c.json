{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-chat\"\n};\nconst _hoisted_2 = {\n  class: \"chat-messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"header\"\n  }, \"Community Chat\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.leaveCommunity && $options.leaveCommunity(...args)),\n    class: \"leave-button\"\n  }, \"Leave Community\"), _createCommentVNode(\" Leave button \"), _createCommentVNode(\" Chat messages and input fields go here \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-message\"\n    }, [_createCommentVNode(\" Chat message content goes here \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","leaveCommunity","_createCommentVNode","_hoisted_2","_Fragment","_renderList","_ctx","chatMessages","message","index","key"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/CommunityChatPage.vue"],"sourcesContent":["<template>\n  <div class=\"community-chat\">\n    <h2 class=\"header\">Community Chat</h2>\n    <button @click=\"leaveCommunity\" class=\"leave-button\">Leave Community</button> <!-- Leave button -->\n\n    <!-- Chat messages and input fields go here -->\n\n    <div class=\"chat-messages\">\n      <div v-for=\"(message, index) in chatMessages\" :key=\"index\" class=\"chat-message\">\n        <!-- Chat message content goes here -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'CommunityChatComponent',\n  props: ['communityId'], // Pass communityId as a prop\n  computed: {\n    ...mapGetters(['userId']), // Get userId from Vuex store\n  },\n  methods: {\n    ...mapActions(['leaveCommunity']), // Vuex action to reset joined community state\n\n    async leaveCommunity() {\n      try {\n        // Send DELETE request to the backend\n        const response = await fetch(`http://localhost:8084/api/communities/${this.communityId}/leave?userId=${this.userId}`, {\n          method: 'DELETE',\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to leave the community');\n        }\n\n        // Update Vuex store to indicate the user has left the community\n        this.leaveCommunity(); // This calls the Vuex action to reset the community state\n\n        // Redirect user back to the communities list\n        this.$router.push({ name: 'Communities' });\n      } catch (error) {\n        console.error('Error leaving community:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.leave-button {\n  background-color: #ff5f5f;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 20px;\n  cursor: pointer;\n  margin-bottom: 20px;\n}\n\n.leave-button:hover {\n  background-color: #e02b2b;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAMpBA,KAAK,EAAC;AAAe;;uBAN5BC,mBAAA,CAWM,OAXNC,UAWM,G,0BAVJC,mBAAA,CAAsC;IAAlCH,KAAK,EAAC;EAAQ,GAAC,gBAAc,sBACjCG,mBAAA,CAA6E;IAApEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAEN,KAAK,EAAC;KAAe,iBAAe,GAAUS,mBAAA,kBAAqB,EAEnGA,mBAAA,4CAA+C,EAE/CN,mBAAA,CAIM,OAJNO,UAIM,I,kBAHJT,mBAAA,CAEMU,SAAA,QAVZC,WAAA,CAQsCC,IAAA,CAAAC,YAAY,EARlD,CAQmBC,OAAO,EAAEC,KAAK;yBAA3Bf,mBAAA,CAEM;MAFyCgB,GAAG,EAAED,KAAK;MAAEhB,KAAK,EAAC;QAC/DS,mBAAA,oCAAuC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}