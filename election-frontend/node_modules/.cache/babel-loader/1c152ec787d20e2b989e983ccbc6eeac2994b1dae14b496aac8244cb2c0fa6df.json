{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"username-page\"\n};\nconst _hoisted_2 = {\n  class: \"username-page-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"chat-page\"\n};\nconst _hoisted_4 = {\n  class: \"chat-container\"\n};\nconst _hoisted_5 = {\n  class: \"chat-header\"\n};\nconst _hoisted_6 = {\n  class: \"connecting\"\n};\nconst _hoisted_7 = {\n  class: \"message-area\",\n  ref: \"messageArea\"\n};\nconst _hoisted_8 = {\n  class: \"sender-name\"\n};\nconst _hoisted_9 = {\n  class: \"message-content\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"input-group clearfix\"\n};\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"noscript\", null, [_createElementVNode(\"h2\", null, \"Sorry! Your browser doesn't support Javascript\")], -1 /* HOISTED */)), !$data.isChatPageVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"Welcome to the Chatroom\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.joinChat && $options.joinChat(...args)),\n    class: \"accent username-submit\"\n  }, \"Join\")])])) : _createCommentVNode(\"v-if\", true), $data.isChatPageVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"LiveChatPage\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.leaveChat && $options.leaveChat(...args)),\n    class: \"leave-button\"\n  }, \"Leave\")]), _withDirectives(_createElementVNode(\"div\", _hoisted_6, \" Connecting... \", 512 /* NEED_PATCH */), [[_vShow, $data.isConnecting]]), _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass(['message-container', message.isOwnMessage ? 'own-message-container' : 'other-message-container'])\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass(message.isOwnMessage ? 'own-message' : 'other-message')\n    }, [message.type === 'CHAT' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"i\", {\n      style: _normalizeStyle({\n        backgroundColor: $options.getAvatarColor(message.sender)\n      })\n    }, _toDisplayString(message.sender[0]), 5 /* TEXT, STYLE */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(message.sender), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_9, _toDisplayString(message.content), 1 /* TEXT */)], 2 /* CLASS */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _withDirectives(_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.messageInput = $event),\n    placeholder: \"Type a message...\",\n    autocomplete: \"off\",\n    class: \"form-control\",\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.checkCharacterLimit && $options.checkCharacterLimit(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.messageInput]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"primary\",\n    disabled: $options.remainingCharacters < 0\n  }, \"Send\", 8 /* PROPS */, _hoisted_12)]), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"character-count\", {\n      'over-limit': $options.remainingCharacters < 0\n    }])\n  }, \" Characters left: \" + _toDisplayString($options.remainingCharacters), 3 /* TEXT, CLASS */)])], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vShow, $data.isChatPageVisible]])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","ref","_createElementBlock","_createElementVNode","$data","isChatPageVisible","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","joinChat","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","leaveChat","_hoisted_6","isConnecting","_hoisted_7","_Fragment","_renderList","messages","message","index","_normalizeClass","isOwnMessage","type","style","_normalizeStyle","backgroundColor","getAvatarColor","sender","_hoisted_8","_toDisplayString","_hoisted_9","content","onSubmit","_withModifiers","sendMessage","_hoisted_10","_hoisted_11","$event","messageInput","placeholder","autocomplete","onInput","checkCharacterLimit","disabled","remainingCharacters","_hoisted_12"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/LiveChatPageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <noscript>\n      <h2>Sorry! Your browser doesn't support Javascript</h2>\n    </noscript>\n\n    <div v-if=\"!isChatPageVisible\" class=\"username-page\">\n      <div class=\"username-page-container\">\n        <h1 class=\"title\">Welcome to the Chatroom</h1>\n        <button @click=\"joinChat\" class=\"accent username-submit\">Join</button>\n      </div>\n    </div>\n\n    <div v-if=\"isChatPageVisible\" class=\"chat-page\">\n      <div class=\"chat-container\">\n        <div class=\"chat-header\">\n          <h2>LiveChatPage</h2>\n          <button @click=\"leaveChat\" class=\"leave-button\">Leave</button>\n        </div>\n        <div class=\"connecting\" v-show=\"isConnecting\">\n          Connecting...\n        </div>\n        <ul class=\"message-area\" ref=\"messageArea\">\n          <li\n              v-for=\"(message, index) in messages\"\n              :key=\"index\"\n              :class=\"[\n              'message-container',\n              message.isOwnMessage ? 'own-message-container' : 'other-message-container'\n            ]\"\n          >\n            <div :class=\"message.isOwnMessage ? 'own-message' : 'other-message'\">\n              <template v-if=\"message.type === 'CHAT'\">\n                <i :style=\"{ backgroundColor: getAvatarColor(message.sender) }\">\n                  {{ message.sender[0] }}\n                </i>\n                <span class=\"sender-name\">{{ message.sender }}</span>\n              </template>\n              <p class=\"message-content\">{{ message.content }}</p>\n            </div>\n          </li>\n        </ul>\n\n        <form @submit.prevent=\"sendMessage\" v-show=\"isChatPageVisible\">\n          <div class=\"form-group\">\n            <div class=\"input-group clearfix\">\n              <input\n                  type=\"text\"\n                  v-model=\"messageInput\"\n                  placeholder=\"Type a message...\"\n                  autocomplete=\"off\"\n                  class=\"form-control\"\n                  @input=\"checkCharacterLimit\"\n              />\n              <button type=\"submit\" class=\"primary\" :disabled=\"remainingCharacters < 0\">Send</button>\n            </div>\n            <p class=\"character-count\" :class=\"{ 'over-limit': remainingCharacters < 0 }\">\n              Characters left: {{ remainingCharacters }}\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nexport default {\n  data() {\n    return {\n      isChatPageVisible: false,\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220, // Maximum aantal karakters\n    };\n  },\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const storedUsername = localStorage.getItem(\"username\");\n      if (storedUsername) {\n        this.usernameInput = storedUsername;\n      }\n    },\n\n    joinChat() {\n      if (this.usernameInput.trim()) {\n        this.connect();\n      }\n    },\n\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && !this.hasLeft) {\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            {},\n            JSON.stringify({ sender: this.usernameInput, type: \"LEAVE\" })\n        );\n        this.hasLeft = true;\n        this.isChatPageVisible = false;\n      }\n    },\n\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        localStorage.setItem(\"username\", this.usernameInput);\n        this.hasLeft = false;\n\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n\n        this.stompClient.activate();\n      }\n    },\n\n    beforeDestroy() {\n      if (this.stompClient && this.stompClient.active) {\n        this.leaveChat();\n        this.stompClient.deactivate();\n      }\n    },\n\n    onConnected() {\n      this.isChatPageVisible = true;\n\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n\n      this.stompClient.send(\n          \"/app/chat.addUser\",\n          {},\n          JSON.stringify({ sender: this.usernameInput, type: \"JOIN\" })\n      );\n\n      this.isConnecting = false;\n    },\n\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n      this.$set(\n          this,\n          \"connectingMessage\",\n          \"Could not connect to WebSocket server. Please refresh this page to try again!\"\n      );\n    },\n\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\",\n        };\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      } else {\n        console.error(\"Connection not active or message too long. Unable to send message.\");\n      }\n    },\n\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n\n      message.isOwnMessage = message.sender === this.usernameInput;\n\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n\n      const lastMessage = this.messages[this.messages.length - 1];\n      if (!(message.type === \"LEAVE\" && lastMessage && lastMessage.sender === message.sender && lastMessage.type === \"LEAVE\")) {\n        this.messages.push(message);\n      }\n\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.loadUsername();\n  },\n};\n</script>\n\n<style scoped>\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n  line-height: 1.58;\n  color: #333;\n  background-color: #f4f4f4;\n  height: 100%;\n}\n\n.form-control {\n  width: 100%;\n  min-height: 38px;\n  font-size: 15px;\n  border: 1px solid #c8c8c8;\n}\n\n.hidden {\n  display: none;\n}\n\n.username-page {\n  text-align: center;\n}\n\n.username-page-container {\n  background: #fff;\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\n  border-radius: 2px;\n  width: 100%;\n  max-width: 500px;\n  display: inline-block;\n  margin-top: 42px;\n  vertical-align: middle;\n  position: relative;\n  padding: 35px 55px 35px;\n  min-height: 250px;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  margin-top: -160px;\n}\n\n.username-submit {\n  margin-top: 10px;\n}\n\n.leave-button {\n  background-color: #ff4d4d;\n  color: #fff;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n\n.leave-button:hover {\n  background-color: #ff3333;\n}\n\n\n.chat-page {\n  position: relative;\n  height: 100%;\n}\n\n.chat-container {\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #fff;\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\n  margin-top: 30px;\n  height: 600px;\n  max-height: 600px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.message-area {\n  list-style-type: none;\n  background-color: #FFF;\n  margin: 0;\n  overflow-y: auto;\n  padding: 0 20px;\n  flex-grow: 1;\n}\n\n.message-container {\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px 0;\n  max-width: 60%;\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message-container {\n  align-self: flex-end;\n  background-color: #d4f5d4;\n}\n\n.other-message-container {\n  align-self: flex-start;\n  background-color: #e1e1e1;\n}\n\n.own-message,\n.other-message {\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message i,\n.other-message i {\n  margin-right: 10px;\n  color: #fff;\n  text-align: center;\n  border-radius: 50%;\n  font-style: normal;\n  text-transform: uppercase;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\n\n.sender-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.message-content {\n  margin: 0;\n  padding: 8px;\n  word-wrap: break-word;\n}\n\n\n.form-group {\n  margin-bottom: 15px;\n}\n\ninput {\n  padding-left: 10px;\n  outline: none;\n}\n\nbutton {\n  box-shadow: none;\n  border: 1px solid transparent;\n  font-size: 14px;\n  outline: none;\n  line-height: 100%;\n  white-space: nowrap;\n  vertical-align: middle;\n  padding: 0.6rem 1rem;\n  border-radius: 2px;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  min-height: 38px;\n}\n\nbutton.primary {\n  background-color: #6db33f;\n  color: #fff;\n}\n\nbutton.accent {\n  background-color: #6db33f;\n  color: #fff;\n}\n\n.chat-header {\n  text-align: center;\n  padding: 15px;\n  border-bottom: 1px solid #ececec;\n}\n\n.connecting {\n  padding-top: 5px;\n  text-align: center;\n  color: #777;\n  position: absolute;\n  top: 65px;\n  width: 100%;\n}\n\n@media screen and (max-width: 730px) {\n  .chat-container {\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 10px;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .chat-container {\n    height: calc(100% - 30px);\n  }\n\n  .username-page-container {\n    width: auto;\n    margin-left: 15px;\n    margin-right: 15px;\n    padding: 25px;\n  }\n\n  .message-area {\n    height: calc(100% - 120px);\n  }\n\n  .chat-header {\n    padding: 10px;\n  }\n\n  .connecting {\n    top: 60px;\n  }\n\n  .chat-header h2 {\n    font-size: 1.1em;\n  }\n\n  .character-count {\n    font-size: 14px;\n    color: #666;\n    margin-top: 5px;\n    text-align: right;\n  }\n\n  .over-limit {\n    color: red;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}