{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'CommunityChatComponent',\n  props: ['communityId'],\n  // Pass communityId as a prop\n  computed: {\n    ...mapGetters(['userId']) // Get userId from Vuex store\n  },\n  methods: {\n    ...mapActions(['leaveCommunity']),\n    // Vuex action to reset joined community state\n\n    async leaveCommunity() {\n      try {\n        // Send DELETE request to the backend\n        const response = await fetch(`http://localhost:8084/api/communities/${this.communityId}/leave?userId=${this.userId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to leave the community');\n        }\n\n        // Update Vuex store to indicate the user has left the community\n        this.leaveCommunity(); // This calls the Vuex action to reset the community state\n\n        // Redirect user back to the communities list\n        this.$router.push({\n          name: 'Communities'\n        });\n      } catch (error) {\n        console.error('Error leaving community:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","props","computed","methods","leaveCommunity","response","fetch","communityId","userId","method","ok","Error","$router","push","error","console"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/CommunityChatPage.vue"],"sourcesContent":["<template>\n  <div class=\"community-chat\">\n    <h2 class=\"header\">Community Chat</h2>\n    <button @click=\"leaveCommunity\" class=\"leave-button\">Leave Community</button> <!-- Leave button -->\n\n    <!-- Chat messages and input fields go here -->\n\n    <div class=\"chat-messages\">\n      <div v-for=\"(message, index) in chatMessages\" :key=\"index\" class=\"chat-message\">\n        <!-- Chat message content goes here -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'CommunityChatComponent',\n  props: ['communityId'], // Pass communityId as a prop\n  computed: {\n    ...mapGetters(['userId']), // Get userId from Vuex store\n  },\n  methods: {\n    ...mapActions(['leaveCommunity']), // Vuex action to reset joined community state\n\n    async leaveCommunity() {\n      try {\n        // Send DELETE request to the backend\n        const response = await fetch(`http://localhost:8084/api/communities/${this.communityId}/leave?userId=${this.userId}`, {\n          method: 'DELETE',\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to leave the community');\n        }\n\n        // Update Vuex store to indicate the user has left the community\n        this.leaveCommunity(); // This calls the Vuex action to reset the community state\n\n        // Redirect user back to the communities list\n        this.$router.push({ name: 'Communities' });\n      } catch (error) {\n        console.error('Error leaving community:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.leave-button {\n  background-color: #ff5f5f;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 20px;\n  cursor: pointer;\n  margin-bottom: 20px;\n}\n\n.leave-button:hover {\n  background-color: #e02b2b;\n}\n</style>\n"],"mappings":";AAgBA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,wBAAwB;EAC9BC,KAAK,EAAE,CAAC,aAAa,CAAC;EAAE;EACxBC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE;EAC7B,CAAC;EACDK,OAAO,EAAE;IACP,GAAGJ,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC;IAAE;;IAEnC,MAAMK,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,yCAAyC,IAAI,CAACC,WAAW,iBAAiB,IAAI,CAACC,MAAM,EAAE,EAAE;UACpHC,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;;QAEA;QACA,IAAI,CAACP,cAAc,CAAC,CAAC,EAAE;;QAEvB;QACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;UAAEb,IAAI,EAAE;QAAc,CAAC,CAAC;MAC5C,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}