{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\nexport default {\n  // Beginstatus van een chat\n  data() {\n    return {\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      hasJoined: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220\n    };\n  },\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const storedUsername = localStorage.getItem(\"username\");\n      if (storedUsername) {\n        this.usernameInput = storedUsername;\n      } else {\n        this.usernameInput = \"Guest\" + Math.floor(Math.random() * 1000);\n        localStorage.setItem(\"username\", this.usernameInput);\n      }\n    },\n    async loadRecentMessages() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await fetch(\"http://localhost:8084/api/chat/recentMessages\", {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.messages = data.map(message => ({\n            ...message,\n            isOwnMessage: message.sender === this.usernameInput\n          }));\n        } else {\n          console.error(\"Failed to load recent messages.\");\n        }\n      } catch (error) {\n        console.error(\"Error loading recent messages:\", error);\n      }\n    },\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        this.hasLeft = false;\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n        this.stompClient.activate();\n      }\n    },\n    joinChat() {\n      if (!this.hasJoined) {\n        this.hasJoined = true;\n        this.stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n          sender: this.usernameInput,\n          type: \"JOIN\"\n        }));\n      }\n    },\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && this.hasJoined) {\n        this.stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n          sender: this.usernameInput,\n          type: \"LEAVE\"\n        }));\n        this.hasLeft = true;\n        this.hasJoined = false;\n      }\n      this.stompClient.deactivate();\n    },\n    onConnected() {\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n      this.isConnecting = false;\n    },\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n    },\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\"\n        };\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      } else {\n        console.error(\"Connection not active or message too long. Unable to send message.\");\n      }\n    },\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n      message.isOwnMessage = message.sender === this.usernameInput;\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n      this.messages.push(message);\n      if (this.messages.length > 20) {\n        this.messages.shift(); // Verwijder het oudste bericht om alleen de laatste 20 berichten te behouden\n      }\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.loadUsername();\n    this.connect();\n    this.loadRecentMessages();\n  },\n  beforeUnmount() {\n    if (this.stompClient && this.stompClient.active) {\n      this.leaveChat();\n      this.stompClient.deactivate();\n    }\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","data","isConnecting","usernameInput","messageInput","messages","stompClient","hasLeft","hasJoined","colors","maxCharacters","computed","remainingCharacters","length","methods","loadUsername","storedUsername","localStorage","getItem","Math","floor","random","setItem","loadRecentMessages","token","response","fetch","method","headers","ok","json","map","message","isOwnMessage","sender","console","error","connect","trim","active","socket","over","reconnectDelay","onConnect","onConnected","onStompError","onError","activate","joinChat","send","JSON","stringify","type","leaveChat","deactivate","subscribe","onMessageReceived","sendMessage","messageContent","chatMessage","content","payload","parse","body","push","shift","$nextTick","messageArea","$refs","scrollTop","scrollHeight","getAvatarColor","messageSender","hash","i","charCodeAt","index","abs","checkCharacterLimit","substring","mounted","beforeUnmount"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/LiveChatPageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <noscript>\n      <h2>Sorry! Your browser doesn't support Javascript</h2>\n    </noscript>\n\n    <div class=\"chat-page\">\n      <div class=\"chat-container\">\n        <div class=\"chat-header\">\n          <h2>LiveChatPage</h2>\n          <h3>{{ usernameInput }}</h3>\n          <button @click=\"leaveChat\" class=\"leave-button\" v-if=\"hasJoined\">Leave</button>\n        </div>\n        <div class=\"connecting\" v-show=\"isConnecting\">\n          Connecting...\n        </div>\n        <ul class=\"message-area\" ref=\"messageArea\">\n          <li\n              v-for=\"(message, index) in messages\"\n              :key=\"index\"\n              :class=\"[\n                'message-container',\n                message.isOwnMessage ? 'own-message-container' : 'other-message-container'\n              ]\"\n          >\n            <div :class=\"message.isOwnMessage ? 'own-message' : 'other-message'\">\n              <template v-if=\"message.type === 'CHAT'\">\n                <i :style=\"{ backgroundColor: getAvatarColor(message.sender) }\">\n                  {{ message.sender[0] }}\n                </i>\n                <span class=\"sender-name\">{{ message.sender }}</span>\n              </template>\n              <p class=\"message-content\">{{ message.content }}</p>\n            </div>\n          </li>\n        </ul>\n\n        <!-- Formulier om berichten te versturen, alleen zichtbaar na 'Join' -->\n        <form @submit.prevent=\"sendMessage\" v-if=\"hasJoined\">\n          <div class=\"form-group\">\n            <div class=\"input-group clearfix\">\n              <input\n                  type=\"text\"\n                  v-model=\"messageInput\"\n                  placeholder=\"Type a message...\"\n                  autocomplete=\"off\"\n                  class=\"form-control\"\n                  @input=\"checkCharacterLimit\"\n              />\n              <button type=\"submit\" class=\"primary\" :disabled=\"remainingCharacters < 0\">Send</button>\n            </div>\n            <p class=\"character-count\" :class=\"{ 'over-limit': remainingCharacters < 0 }\">\n              Characters left: {{ remainingCharacters }}\n            </p>\n          </div>\n        </form>\n\n        <!-- Join-knop onderaan de chat, alleen zichtbaar als de gebruiker niet gejoined is -->\n        <button v-if=\"!hasJoined\" @click=\"joinChat\" class=\"join-button\">\n          Join\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nexport default {\n  // Beginstatus van een chat\n  data() {\n    return {\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      hasJoined: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220,\n    };\n  },\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const storedUsername = localStorage.getItem(\"username\");\n      if (storedUsername) {\n        this.usernameInput = storedUsername;\n      } else {\n        this.usernameInput = \"Guest\" + Math.floor(Math.random() * 1000);\n        localStorage.setItem(\"username\", this.usernameInput);\n      }\n    },\n\n    async loadRecentMessages() {\n      try {\n\n        const token = localStorage.getItem(\"token\");\n\n        const response = await fetch(\"http://localhost:8084/api/chat/recentMessages\", {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.messages = data.map((message) => ({\n            ...message,\n            isOwnMessage: message.sender === this.usernameInput\n          }));\n        } else {\n          console.error(\"Failed to load recent messages.\");\n        }\n      } catch (error) {\n        console.error(\"Error loading recent messages:\", error);\n      }\n    },\n\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        this.hasLeft = false;\n\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n\n        this.stompClient.activate();\n      }\n    },\n\n    joinChat() {\n      if (!this.hasJoined) {\n        this.hasJoined = true;\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            {},\n            JSON.stringify({ sender: this.usernameInput, type: \"JOIN\" })\n        );\n      }\n    },\n\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && this.hasJoined) {\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            {},\n            JSON.stringify({ sender: this.usernameInput, type: \"LEAVE\" })\n        );\n        this.hasLeft = true;\n        this.hasJoined = false;\n      }\n      this.stompClient.deactivate();\n    },\n\n    onConnected() {\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n      this.isConnecting = false;\n    },\n\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n    },\n\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\",\n        };\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      } else {\n        console.error(\"Connection not active or message too long. Unable to send message.\");\n      }\n    },\n\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n      message.isOwnMessage = message.sender === this.usernameInput;\n\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n\n      this.messages.push(message);\n\n      if (this.messages.length > 20) {\n        this.messages.shift(); // Verwijder het oudste bericht om alleen de laatste 20 berichten te behouden\n      }\n\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.loadUsername();\n    this.connect();\n    this.loadRecentMessages();\n  },\n  beforeUnmount() {\n    if (this.stompClient && this.stompClient.active) {\n      this.leaveChat();\n      this.stompClient.deactivate();\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n* {\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n  line-height: 1.58;\n  color: #333;\n  background-color: #f4f4f4;\n  height: 100%;\n}\n\n.chat-page {\n  position: relative;\n  height: 100%;\n}\n\n.chat-container {\n  max-width: 700px;\n  margin: 30px auto;\n  background-color: #fff;\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\n  height: 600px;\n  max-height: 600px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.chat-header {\n  text-align: center;\n  padding: 15px;\n  border-bottom: 1px solid #ececec;\n}\n\n.connecting {\n  padding-top: 5px;\n  text-align: center;\n  color: #777;\n  position: absolute;\n  top: 65px;\n  width: 100%;\n}\n\n.message-area {\n  list-style-type: none;\n  background-color: #FFF;\n  margin: 0;\n  overflow-y: auto;\n  padding: 0 20px;\n  flex-grow: 1;\n}\n\n.message-container {\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px 0;\n  max-width: 60%;\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message-container {\n  align-self: flex-end;\n  background-color: #d4f5d4;\n}\n\n.other-message-container {\n  align-self: flex-start;\n  background-color: #e1e1e1;\n}\n\n.own-message,\n.other-message {\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message i,\n.other-message i {\n  margin-right: 10px;\n  color: #fff;\n  text-align: center;\n  border-radius: 50%;\n  font-style: normal;\n  text-transform: uppercase;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\n\n.sender-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.message-content {\n  margin: 0;\n  padding: 8px;\n  word-wrap: break-word;\n}\n\n.form-control {\n  width: 100%;\n  min-height: 38px;\n  font-size: 15px;\n  border: 1px solid #c8c8c8;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\ninput {\n  padding-left: 10px;\n  outline: none;\n}\n\nbutton {\n  box-shadow: none;\n  border: 1px solid transparent;\n  font-size: 14px;\n  outline: none;\n  line-height: 100%;\n  white-space: nowrap;\n  vertical-align: middle;\n  padding: 0.6rem 1rem;\n  border-radius: 2px;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  min-height: 38px;\n}\n\nbutton.primary {\n  background-color: #6db33f;\n  color: #fff;\n}\n\nbutton.accent {\n  background-color: #6db33f;\n  color: #fff;\n}\n\n.leave-button {\n  background-color: #ff4d4d;\n  color: #fff;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n\n.leave-button:hover {\n  background-color: #ff3333;\n}\n\n/* Stijlen voor de Join-knop in de chat-container */\n.join-button {\n  background-color: #6db33f; /* Groene achtergrondkleur */\n  color: #fff; /* Witte tekstkleur */\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin: 10px auto 20px; /* Plaats de knop gecentreerd onderaan */\n  width: 80%;\n  text-align: center;\n}\n\n.join-button:hover {\n  background-color: #5a9e2c; /* Donkergroen bij hover */\n}\n\n@media screen and (max-width: 730px) {\n  .chat-container {\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 10px;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .chat-container {\n    height: calc(100% - 30px);\n  }\n\n  .message-area {\n    height: calc(100% - 120px);\n  }\n\n  .chat-header {\n    padding: 10px;\n  }\n\n  .connecting {\n    top: 60px;\n  }\n\n  .chat-header h2 {\n    font-size: 1.1em;\n  }\n\n  .character-count {\n    font-size: 14px;\n    color: #666;\n    margin-top: 5px;\n    text-align: right;\n  }\n\n  .over-limit {\n    color: red;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}