{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Chart } from \"chart.js\";\nimport VotesAdapter from \"../adapters/VotesAdapter\";\nimport { API_URL } from \"@/config\";\nexport default {\n  name: \"VotesPerLocation\",\n  data() {\n    return {\n      constituencies: [],\n      selectedConstituency: \"\",\n      parties: [],\n      largestParty: {\n        name: '',\n        totalVotes: 0\n      },\n      secondLargestParty: {\n        name: '',\n        totalVotes: 0\n      },\n      thirdLargestParty: {\n        name: '',\n        totalVotes: 0\n      },\n      barChart: null\n      // url: \"${API_URL}\",\n    };\n  },\n  async mounted() {\n    await this.fetchConstituencies();\n    if (this.constituencies.length > 0) {\n      this.selectedConstituency = this.constituencies[0];\n      this.fetchVotesPerParty();\n    }\n  },\n  methods: {\n    navigateToVotesPerParty() {\n      this.$router.push({\n        name: \"VotesPerParty\"\n      });\n    },\n    async fetchVotesPerParty() {\n      try {\n        const votesAdapter = new VotesAdapter(this.url);\n        const parties = await votesAdapter.fetchVotesPerParty(this.selectedConstituency);\n        this.parties = parties;\n        this.updateTopThreeParties();\n        this.renderCharts();\n      } catch (error) {\n        console.error(\"Error fetching votes per party:\", error);\n      }\n    },\n    async fetchConstituencies() {\n      try {\n        const response = await fetch(`${API_URL}/api/election-results/constituencies`);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        this.constituencies = await response.json();\n      } catch (error) {\n        console.error(\"Error fetching constituencies:\", error);\n      }\n    },\n    updateTopThreeParties() {\n      const sortedParties = [...this.parties];\n      this.largestParty = sortedParties[0] || {\n        name: '',\n        totalVotes: 0\n      };\n      this.secondLargestParty = sortedParties[1] || {\n        name: '',\n        totalVotes: 0\n      };\n      this.thirdLargestParty = sortedParties[2] || {\n        name: '',\n        totalVotes: 0\n      };\n    },\n    getPartyLogo(partyName) {\n      const logos = {\n        SP: require(\"@/assets/party/sp.png\")\n      };\n      return logos[partyName] || null;\n    },\n    renderCharts() {\n      this.renderBarChart();\n    },\n    renderBarChart() {\n      const ctx = document.getElementById(\"votesBarChart\").getContext(\"2d\");\n      if (this.barChart) this.barChart.destroy();\n      this.barChart = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: this.parties.map(party => party.name),\n          datasets: [{\n            label: \"Votes\",\n            data: this.parties.map(party => party.totalVotes),\n            backgroundColor: this.parties.map(() => `hsl(${Math.random() * 360}, 70%, 50%)`)\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    },\n    formatVotes(votes) {\n      return votes.toLocaleString();\n    }\n  }\n};","map":{"version":3,"names":["Chart","VotesAdapter","API_URL","name","data","constituencies","selectedConstituency","parties","largestParty","totalVotes","secondLargestParty","thirdLargestParty","barChart","mounted","fetchConstituencies","length","fetchVotesPerParty","methods","navigateToVotesPerParty","$router","push","votesAdapter","url","updateTopThreeParties","renderCharts","error","console","response","fetch","ok","Error","status","json","sortedParties","getPartyLogo","partyName","logos","SP","require","renderBarChart","ctx","document","getElementById","getContext","destroy","type","labels","map","party","datasets","label","backgroundColor","Math","random","options","responsive","maintainAspectRatio","plugins","legend","display","scales","y","beginAtZero","formatVotes","votes","toLocaleString"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/VotesPerLocation.vue"],"sourcesContent":["<template>\n  <div class=\"votes-per-location\">\n    <select class=\"dropdown-container\" id=\"constituency\" v-model=\"selectedConstituency\" @change=\"fetchVotesPerParty\">\n      <option v-for=\"constituency in constituencies\" :key=\"constituency\" :value=\"constituency\">\n        {{ constituency }}\n      </option>\n    </select>\n    <div class=\"podium\">\n      <div class=\"second-place\">\n        <img v-if=\"getPartyLogo(secondLargestParty.name)\" :src=\"getPartyLogo(secondLargestParty.name)\"\n             alt=\"2nd Place Logo\" class=\"party-logo\"/>\n        <h3>2nd Place</h3>\n        <h2>{{ secondLargestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(secondLargestParty.totalVotes) }}</p>\n      </div>\n      <div class=\"first-place\">\n        <img v-if=\"getPartyLogo(largestParty.name)\" :src=\"getPartyLogo(largestParty.name)\" alt=\"1st Place Logo\"\n             class=\"party-logo\"/>\n        <h3>1st Place</h3>\n        <h2>{{ largestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(largestParty.totalVotes) }}</p>\n        <p class=\"lead-info\">Lead: {{ formatVotes(largestParty.totalVotes - secondLargestParty.totalVotes) }} votes</p>\n      </div>\n      <div class=\"third-place\">\n        <img v-if=\"getPartyLogo(thirdLargestParty.name)\" :src=\"getPartyLogo(thirdLargestParty.name)\"\n             alt=\"3rd Place Logo\"\n             class=\"party-logo\"/>\n        <h3>3rd Place</h3>\n        <h2>{{ thirdLargestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(thirdLargestParty.totalVotes) }}</p>\n      </div>\n    </div>\n\n    <!-- Grafiek -->\n    <div class=\"chart-wrapper bar-chart\">\n      <canvas id=\"votesBarChart\"></canvas>\n    </div>\n    <button class=\"navigation-btn\" @click=\"navigateToVotesPerParty\">View total votes</button>\n  </div>\n</template>\n\n<script>\nimport {Chart} from \"chart.js\";\nimport VotesAdapter from \"../adapters/VotesAdapter\";\nimport {API_URL} from \"@/config\";\n\nexport default {\n  name: \"VotesPerLocation\",\n  data() {\n    return {\n      constituencies: [],\n      selectedConstituency: \"\",\n      parties: [],\n      largestParty: {name: '', totalVotes: 0},\n      secondLargestParty: {name: '', totalVotes: 0},\n      thirdLargestParty: {name: '', totalVotes: 0},\n      barChart: null,\n      // url: \"${API_URL}\",\n    };\n  },\n\n  async mounted() {\n    await this.fetchConstituencies();\n    if (this.constituencies.length > 0) {\n      this.selectedConstituency = this.constituencies[0];\n      this.fetchVotesPerParty();\n    }\n  },\n  methods: {\n    navigateToVotesPerParty() {\n      this.$router.push({name: \"VotesPerParty\"});\n    },\n\n    async fetchVotesPerParty() {\n      try {\n        const votesAdapter = new VotesAdapter(this.url)\n        const parties = await votesAdapter.fetchVotesPerParty(this.selectedConstituency)\n        this.parties = parties;\n        this.updateTopThreeParties();\n        this.renderCharts()\n      } catch (error) {\n        console.error(\"Error fetching votes per party:\", error);\n      }\n\n    },\n    async fetchConstituencies() {\n      try {\n        const response = await fetch(`${API_URL}/api/election-results/constituencies`);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        this.constituencies = await response.json();\n      } catch (error) {\n        console.error(\"Error fetching constituencies:\", error);\n      }\n    },\n\n    updateTopThreeParties() {\n      const sortedParties = [...this.parties];\n      this.largestParty = sortedParties[0] || {name: '', totalVotes: 0,};\n      this.secondLargestParty = sortedParties[1] || {name: '', totalVotes: 0,};\n      this.thirdLargestParty = sortedParties[2] || {name: '', totalVotes: 0,};\n    },\n\n    getPartyLogo(partyName) {\n      const logos = {\n        SP: require(\"@/assets/party/sp.png\"),\n      };\n      return logos[partyName] || null;\n    },\n\n    renderCharts() {\n      this.renderBarChart();\n    },\n\n    renderBarChart() {\n      const ctx = document.getElementById(\"votesBarChart\").getContext(\"2d\");\n      if (this.barChart) this.barChart.destroy();\n      this.barChart = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: this.parties.map((party) => party.name),\n          datasets: [\n            {\n              label: \"Votes\",\n              data: this.parties.map((party) => party.totalVotes),\n              backgroundColor: this.parties.map(() => `hsl(${Math.random() * 360}, 70%, 50%)`),\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {display: false},\n          },\n          scales: {\n            y: {beginAtZero: true},\n          },\n        },\n      });\n    },\n\n    formatVotes(votes) {\n      return votes.toLocaleString();\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n.votes-per-location {\n  margin: 20px;\n  text-align: center;\n}\n\n.navigation-btn {\n  display: block;\n  margin: 0 auto 20px;\n  padding: 15px 30px;\n  background-color: #ec7700;\n  border: none;\n  border-radius: 10px;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.navigation-btn:hover {\n  background-color: #c26200;\n}\n\n.podium {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.first-place {\n  width: 25vw;\n  padding: 1%;\n  background-color: gold;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.second-place {\n  width: 20vw;\n  padding: 1%;\n  background-color: silver;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.third-place {\n  width: 15vw;\n  padding: 1%;\n  background-color: #cd7f32;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n\n.bar-chart {\n  width: 100%;\n  max-width: 1500px;\n  height: 800px;\n  margin: 30px auto;\n}\n\n.dropdown-container {\n  margin: 20px auto;\n  text-align: center;\n  width: 15vw;\n  height: 4vh;\n  font-size: 180%;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}