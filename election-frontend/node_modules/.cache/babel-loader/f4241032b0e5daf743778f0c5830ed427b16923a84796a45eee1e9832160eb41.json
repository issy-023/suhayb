{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"votes-per-location\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"podium\"\n};\nconst _hoisted_4 = {\n  class: \"second-place\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"first-place\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"lead-info\"\n};\nconst _hoisted_9 = {\n  class: \"third-place\"\n};\nconst _hoisted_10 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"dropdown-container\",\n    id: \"constituency\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedConstituency = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.fetchVotesPerParty && $options.fetchVotesPerParty(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.constituencies, constituency => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: constituency,\n      value: constituency\n    }, _toDisplayString(constituency), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedConstituency]]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [$options.getPartyLogo($data.secondLargestParty.name) ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $options.getPartyLogo($data.secondLargestParty.name),\n    alt: \"2nd Place Logo\",\n    class: \"party-logo\"\n  }, null, 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), _cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"2nd Place\", -1 /* HOISTED */)), _createElementVNode(\"h2\", null, _toDisplayString($data.secondLargestParty.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Votes: \" + _toDisplayString($options.formatVotes($data.secondLargestParty.totalVotes)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [$options.getPartyLogo($data.largestParty.name) ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $options.getPartyLogo($data.largestParty.name),\n    alt: \"1st Place Logo\",\n    class: \"party-logo\"\n  }, null, 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true), _cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"1st Place\", -1 /* HOISTED */)), _createElementVNode(\"h2\", null, _toDisplayString($data.largestParty.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Votes: \" + _toDisplayString($options.formatVotes($data.largestParty.totalVotes)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, \"Lead: \" + _toDisplayString($options.formatVotes($data.largestParty.totalVotes - $data.secondLargestParty.totalVotes)) + \" votes\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [$options.getPartyLogo($data.thirdLargestParty.name) ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $options.getPartyLogo($data.thirdLargestParty.name),\n    alt: \"3rd Place Logo\",\n    class: \"party-logo\"\n  }, null, 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true), _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"3rd Place\", -1 /* HOISTED */)), _createElementVNode(\"h2\", null, _toDisplayString($data.thirdLargestParty.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Votes: \" + _toDisplayString($options.formatVotes($data.thirdLargestParty.totalVotes)), 1 /* TEXT */)])]), _createCommentVNode(\" Grafiek \"), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"chart-wrapper bar-chart\"\n  }, [_createElementVNode(\"canvas\", {\n    id: \"votesBarChart\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"navigation-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.navigateToVotesPerParty && $options.navigateToVotesPerParty(...args))\n  }, \"View total votes\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","id","_cache","$event","$data","selectedConstituency","onChange","args","$options","fetchVotesPerParty","_Fragment","_renderList","constituencies","constituency","key","value","_hoisted_2","_hoisted_3","_hoisted_4","getPartyLogo","secondLargestParty","name","src","alt","_hoisted_5","_createCommentVNode","_toDisplayString","formatVotes","totalVotes","_hoisted_6","largestParty","_hoisted_7","_hoisted_8","_hoisted_9","thirdLargestParty","_hoisted_10","onClick","navigateToVotesPerParty"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/VotesPerLocation.vue"],"sourcesContent":["<template>\n  <div class=\"votes-per-location\">\n    <select class=\"dropdown-container\" id=\"constituency\" v-model=\"selectedConstituency\" @change=\"fetchVotesPerParty\">\n      <option v-for=\"constituency in constituencies\" :key=\"constituency\" :value=\"constituency\">\n        {{ constituency }}\n      </option>\n    </select>\n    <div class=\"podium\">\n      <div class=\"second-place\">\n        <img v-if=\"getPartyLogo(secondLargestParty.name)\" :src=\"getPartyLogo(secondLargestParty.name)\"\n             alt=\"2nd Place Logo\" class=\"party-logo\"/>\n        <h3>2nd Place</h3>\n        <h2>{{ secondLargestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(secondLargestParty.totalVotes) }}</p>\n      </div>\n      <div class=\"first-place\">\n        <img v-if=\"getPartyLogo(largestParty.name)\" :src=\"getPartyLogo(largestParty.name)\" alt=\"1st Place Logo\"\n             class=\"party-logo\"/>\n        <h3>1st Place</h3>\n        <h2>{{ largestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(largestParty.totalVotes) }}</p>\n        <p class=\"lead-info\">Lead: {{ formatVotes(largestParty.totalVotes - secondLargestParty.totalVotes) }} votes</p>\n      </div>\n      <div class=\"third-place\">\n        <img v-if=\"getPartyLogo(thirdLargestParty.name)\" :src=\"getPartyLogo(thirdLargestParty.name)\"\n             alt=\"3rd Place Logo\"\n             class=\"party-logo\"/>\n        <h3>3rd Place</h3>\n        <h2>{{ thirdLargestParty.name }}</h2>\n        <p>Votes: {{ formatVotes(thirdLargestParty.totalVotes) }}</p>\n      </div>\n    </div>\n\n    <!-- Grafiek -->\n    <div class=\"chart-wrapper bar-chart\">\n      <canvas id=\"votesBarChart\"></canvas>\n    </div>\n    <button class=\"navigation-btn\" @click=\"navigateToVotesPerParty\">View total votes</button>\n  </div>\n</template>\n\n<script>\nimport {Chart} from \"chart.js\";\nimport VotesAdapter from \"../adapters/VotesAdapter\";\n\nexport default {\n  name: \"VotesPerLocation\",\n  data() {\n    return {\n      constituencies: [],\n      selectedConstituency: \"\",\n      parties: [],\n      largestParty: {name: '', totalVotes: 0},\n      secondLargestParty: {name: '', totalVotes: 0},\n      thirdLargestParty: {name: '', totalVotes: 0},\n      barChart: null,\n      url: \"http://localhost:8084\",\n    };\n  },\n\n  async mounted() {\n    await this.fetchConstituencies();\n    if (this.constituencies.length > 0) {\n      this.selectedConstituency = this.constituencies[0];\n      this.fetchVotesPerParty();\n    }\n  },\n  methods: {\n    navigateToVotesPerParty() {\n      this.$router.push({name: \"VotesPerParty\"});\n    },\n\n    async fetchVotesPerParty() {\n      try {\n        const votesAdapter = new VotesAdapter(this.url)\n        const parties = await votesAdapter.fetchVotesPerParty(this.selectedConstituency)\n        this.parties = parties;\n        this.updateTopThreeParties();\n        this.renderCharts()\n      } catch (error) {\n        console.error(\"Error fetching votes per party:\", error);\n      }\n\n    },\n    async fetchConstituencies() {\n      try {\n        const response = await fetch(\"http://localhost:8084/api/election-results/constituencies\");\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        this.constituencies = await response.json();\n      } catch (error) {\n        console.error(\"Error fetching constituencies:\", error);\n      }\n    },\n\n    updateTopThreeParties() {\n      const sortedParties = [...this.parties];\n      this.largestParty = sortedParties[0] || {name: '', totalVotes: 0,};\n      this.secondLargestParty = sortedParties[1] || {name: '', totalVotes: 0,};\n      this.thirdLargestParty = sortedParties[2] || {name: '', totalVotes: 0,};\n    },\n\n    getPartyLogo(partyName) {\n      const logos = {\n        SP: require(\"@/assets/party/sp.png\"),\n      };\n      return logos[partyName] || null;\n    },\n\n    renderCharts() {\n      this.renderBarChart();\n    },\n\n    renderBarChart() {\n      const ctx = document.getElementById(\"votesBarChart\").getContext(\"2d\");\n      if (this.barChart) this.barChart.destroy();\n      this.barChart = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: this.parties.map((party) => party.name),\n          datasets: [\n            {\n              label: \"Votes\",\n              data: this.parties.map((party) => party.totalVotes),\n              backgroundColor: this.parties.map(() => `hsl(${Math.random() * 360}, 70%, 50%)`),\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {display: false},\n          },\n          scales: {\n            y: {beginAtZero: true},\n          },\n        },\n      });\n    },\n\n    formatVotes(votes) {\n      return votes.toLocaleString();\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n.votes-per-location {\n  margin: 20px;\n  text-align: center;\n}\n\n.navigation-btn {\n  display: block;\n  margin: 0 auto 20px;\n  padding: 15px 30px;\n  background-color: #ec7700;\n  border: none;\n  border-radius: 10px;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.navigation-btn:hover {\n  background-color: #c26200;\n}\n\n.podium {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.first-place {\n  width: 25vw;\n  padding: 1%;\n  background-color: gold;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.second-place {\n  width: 20vw;\n  padding: 1%;\n  background-color: silver;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.third-place {\n  width: 15vw;\n  padding: 1%;\n  background-color: #cd7f32;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n\n.bar-chart {\n  width: 100%;\n  max-width: 1500px;\n  height: 800px;\n  margin: 30px auto;\n}\n\n.dropdown-container {\n  margin: 20px auto;\n  text-align: center;\n  width: 15vw;\n  height: 4vh;\n  font-size: 180%;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}