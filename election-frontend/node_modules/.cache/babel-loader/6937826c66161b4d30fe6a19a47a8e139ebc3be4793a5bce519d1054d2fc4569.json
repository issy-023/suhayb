{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\nexport default {\n  data() {\n    return {\n      isChatPageVisible: false,\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220 // Maximum aantal karakters\n    };\n  },\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const storedUsername = localStorage.getItem(\"username\");\n      if (storedUsername) {\n        this.usernameInput = storedUsername;\n      }\n    },\n    joinChat() {\n      if (this.usernameInput.trim()) {\n        this.connect();\n      }\n    },\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && !this.hasLeft) {\n        this.stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n          sender: this.usernameInput,\n          type: \"LEAVE\"\n        }));\n        this.hasLeft = true;\n        this.isChatPageVisible = false;\n      }\n    },\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        localStorage.setItem(\"username\", this.usernameInput);\n        this.hasLeft = false;\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n        this.stompClient.activate();\n      }\n    },\n    beforeDestroy() {\n      if (this.stompClient && this.stompClient.active) {\n        this.leaveChat();\n        this.stompClient.deactivate();\n      }\n    },\n    onConnected() {\n      this.isChatPageVisible = true;\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n      this.stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n        sender: this.usernameInput,\n        type: \"JOIN\"\n      }));\n      this.isConnecting = false;\n    },\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n      this.$set(this, \"connectingMessage\", \"Could not connect to WebSocket server. Please refresh this page to try again!\");\n    },\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\"\n        };\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      } else {\n        console.error(\"Connection not active or message too long. Unable to send message.\");\n      }\n    },\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n      message.isOwnMessage = message.sender === this.usernameInput;\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n      const lastMessage = this.messages[this.messages.length - 1];\n      if (!(message.type === \"LEAVE\" && lastMessage && lastMessage.sender === message.sender && lastMessage.type === \"LEAVE\")) {\n        this.messages.push(message);\n      }\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.loadUsername();\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","data","isChatPageVisible","isConnecting","usernameInput","messageInput","messages","stompClient","hasLeft","colors","maxCharacters","computed","remainingCharacters","length","methods","loadUsername","storedUsername","localStorage","getItem","joinChat","trim","connect","leaveChat","active","send","JSON","stringify","sender","type","setItem","socket","over","reconnectDelay","onConnect","onConnected","onStompError","onError","activate","beforeDestroy","deactivate","subscribe","onMessageReceived","error","console","$set","sendMessage","messageContent","chatMessage","content","payload","message","parse","body","isOwnMessage","lastMessage","push","$nextTick","messageArea","$refs","scrollTop","scrollHeight","getAvatarColor","messageSender","hash","i","charCodeAt","index","Math","abs","checkCharacterLimit","substring","mounted"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/LiveChatPageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <noscript>\n      <h2>Sorry! Your browser doesn't support Javascript</h2>\n    </noscript>\n\n    <div v-if=\"!isChatPageVisible\" class=\"username-page\">\n      <div class=\"username-page-container\">\n        <h1 class=\"title\">Welcome to the Chatroom</h1>\n        <button @click=\"joinChat\" class=\"accent username-submit\">Join</button>\n      </div>\n    </div>\n\n    <div v-if=\"isChatPageVisible\" class=\"chat-page\">\n      <div class=\"chat-container\">\n        <div class=\"chat-header\">\n          <h2>LiveChatPage</h2>\n          <button @click=\"leaveChat\" class=\"leave-button\">Leave</button>\n        </div>\n        <div class=\"connecting\" v-show=\"isConnecting\">\n          Connecting...\n        </div>\n        <ul class=\"message-area\" ref=\"messageArea\">\n          <li\n              v-for=\"(message, index) in messages\"\n              :key=\"index\"\n              :class=\"[\n              'message-container',\n              message.isOwnMessage ? 'own-message-container' : 'other-message-container'\n            ]\"\n          >\n            <div :class=\"message.isOwnMessage ? 'own-message' : 'other-message'\">\n              <template v-if=\"message.type === 'CHAT'\">\n                <i :style=\"{ backgroundColor: getAvatarColor(message.sender) }\">\n                  {{ message.sender[0] }}\n                </i>\n                <span class=\"sender-name\">{{ message.sender }}</span>\n              </template>\n              <p class=\"message-content\">{{ message.content }}</p>\n            </div>\n          </li>\n        </ul>\n\n        <form @submit.prevent=\"sendMessage\" v-show=\"isChatPageVisible\">\n          <div class=\"form-group\">\n            <div class=\"input-group clearfix\">\n              <input\n                  type=\"text\"\n                  v-model=\"messageInput\"\n                  placeholder=\"Type a message...\"\n                  autocomplete=\"off\"\n                  class=\"form-control\"\n                  @input=\"checkCharacterLimit\"\n              />\n              <button type=\"submit\" class=\"primary\" :disabled=\"remainingCharacters < 0\">Send</button>\n            </div>\n            <p class=\"character-count\" :class=\"{ 'over-limit': remainingCharacters < 0 }\">\n              Characters left: {{ remainingCharacters }}\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nexport default {\n  data() {\n    return {\n      isChatPageVisible: false,\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220, // Maximum aantal karakters\n    };\n  },\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const storedUsername = localStorage.getItem(\"username\");\n      if (storedUsername) {\n        this.usernameInput = storedUsername;\n      }\n    },\n\n    joinChat() {\n      if (this.usernameInput.trim()) {\n        this.connect();\n      }\n    },\n\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && !this.hasLeft) {\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            {},\n            JSON.stringify({ sender: this.usernameInput, type: \"LEAVE\" })\n        );\n        this.hasLeft = true;\n        this.isChatPageVisible = false;\n      }\n    },\n\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        localStorage.setItem(\"username\", this.usernameInput);\n        this.hasLeft = false;\n\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n\n        this.stompClient.activate();\n      }\n    },\n\n    beforeDestroy() {\n      if (this.stompClient && this.stompClient.active) {\n        this.leaveChat();\n        this.stompClient.deactivate();\n      }\n    },\n\n    onConnected() {\n      this.isChatPageVisible = true;\n\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n\n      this.stompClient.send(\n          \"/app/chat.addUser\",\n          {},\n          JSON.stringify({ sender: this.usernameInput, type: \"JOIN\" })\n      );\n\n      this.isConnecting = false;\n    },\n\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n      this.$set(\n          this,\n          \"connectingMessage\",\n          \"Could not connect to WebSocket server. Please refresh this page to try again!\"\n      );\n    },\n\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\",\n        };\n        this.stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      } else {\n        console.error(\"Connection not active or message too long. Unable to send message.\");\n      }\n    },\n\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n\n      message.isOwnMessage = message.sender === this.usernameInput;\n\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n\n      const lastMessage = this.messages[this.messages.length - 1];\n      if (!(message.type === \"LEAVE\" && lastMessage && lastMessage.sender === message.sender && lastMessage.type === \"LEAVE\")) {\n        this.messages.push(message);\n      }\n\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.loadUsername();\n  },\n};\n</script>\n\n<style scoped>\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n  line-height: 1.58;\n  color: #333;\n  background-color: #f4f4f4;\n  height: 100%;\n}\n\n.form-control {\n  width: 100%;\n  min-height: 38px;\n  font-size: 15px;\n  border: 1px solid #c8c8c8;\n}\n\n.hidden {\n  display: none;\n}\n\n.username-page {\n  text-align: center;\n}\n\n.username-page-container {\n  background: #fff;\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\n  border-radius: 2px;\n  width: 100%;\n  max-width: 500px;\n  display: inline-block;\n  margin-top: 42px;\n  vertical-align: middle;\n  position: relative;\n  padding: 35px 55px 35px;\n  min-height: 250px;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  margin-top: -160px;\n}\n\n.username-submit {\n  margin-top: 10px;\n}\n\n.leave-button {\n  background-color: #ff4d4d;\n  color: #fff;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n\n.leave-button:hover {\n  background-color: #ff3333;\n}\n\n\n.chat-page {\n  position: relative;\n  height: 100%;\n}\n\n.chat-container {\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #fff;\n  box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);\n  margin-top: 30px;\n  height: 600px;\n  max-height: 600px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.message-area {\n  list-style-type: none;\n  background-color: #FFF;\n  margin: 0;\n  overflow-y: auto;\n  padding: 0 20px;\n  flex-grow: 1;\n}\n\n.message-container {\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px 0;\n  max-width: 60%;\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message-container {\n  align-self: flex-end;\n  background-color: #d4f5d4;\n}\n\n.other-message-container {\n  align-self: flex-start;\n  background-color: #e1e1e1;\n}\n\n.own-message,\n.other-message {\n  display: flex;\n  flex-direction: column;\n}\n\n.own-message i,\n.other-message i {\n  margin-right: 10px;\n  color: #fff;\n  text-align: center;\n  border-radius: 50%;\n  font-style: normal;\n  text-transform: uppercase;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\n\n.sender-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.message-content {\n  margin: 0;\n  padding: 8px;\n  word-wrap: break-word;\n}\n\n\n.form-group {\n  margin-bottom: 15px;\n}\n\ninput {\n  padding-left: 10px;\n  outline: none;\n}\n\nbutton {\n  box-shadow: none;\n  border: 1px solid transparent;\n  font-size: 14px;\n  outline: none;\n  line-height: 100%;\n  white-space: nowrap;\n  vertical-align: middle;\n  padding: 0.6rem 1rem;\n  border-radius: 2px;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  min-height: 38px;\n}\n\nbutton.primary {\n  background-color: #6db33f;\n  color: #fff;\n}\n\nbutton.accent {\n  background-color: #6db33f;\n  color: #fff;\n}\n\n.chat-header {\n  text-align: center;\n  padding: 15px;\n  border-bottom: 1px solid #ececec;\n}\n\n.connecting {\n  padding-top: 5px;\n  text-align: center;\n  color: #777;\n  position: absolute;\n  top: 65px;\n  width: 100%;\n}\n\n@media screen and (max-width: 730px) {\n  .chat-container {\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 10px;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .chat-container {\n    height: calc(100% - 30px);\n  }\n\n  .username-page-container {\n    width: auto;\n    margin-left: 15px;\n    margin-right: 15px;\n    padding: 25px;\n  }\n\n  .message-area {\n    height: calc(100% - 120px);\n  }\n\n  .chat-header {\n    padding: 10px;\n  }\n\n  .connecting {\n    top: 60px;\n  }\n\n  .chat-header h2 {\n    font-size: 1.1em;\n  }\n\n  .character-count {\n    font-size: 14px;\n    color: #666;\n    margin-top: 5px;\n    text-align: right;\n  }\n\n  .over-limit {\n    color: red;\n  }\n}\n</style>\n"],"mappings":";AAmEA,OAAOA,MAAK,MAAO,eAAe;AAClC,SAASC,KAAI,QAAS,gBAAgB;AAEtC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MAChGC,aAAa,EAAE,GAAG,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACF,aAAY,GAAI,IAAI,CAACL,YAAY,CAACQ,MAAM;IACtD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,cAAa,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACvD,IAAIF,cAAc,EAAE;QAClB,IAAI,CAACZ,aAAY,GAAIY,cAAc;MACrC;IACF,CAAC;IAEDG,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACf,aAAa,CAACgB,IAAI,CAAC,CAAC,EAAE;QAC7B,IAAI,CAACC,OAAO,CAAC,CAAC;MAChB;IACF,CAAC;IAEDC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACf,WAAU,IAAK,IAAI,CAACA,WAAW,CAACgB,MAAK,IAAK,CAAC,IAAI,CAACf,OAAO,EAAE;QAChE,IAAI,CAACD,WAAW,CAACiB,IAAI,CACjB,mBAAmB,EACnB,CAAC,CAAC,EACFC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE,IAAI,CAACvB,aAAa;UAAEwB,IAAI,EAAE;QAAQ,CAAC,CAChE,CAAC;QACD,IAAI,CAACpB,OAAM,GAAI,IAAI;QACnB,IAAI,CAACN,iBAAgB,GAAI,KAAK;MAChC;IACF,CAAC;IAEDmB,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACjB,aAAa,CAACgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAACb,WAAW,EAAEgB,MAAM,EAAE;QAC1DN,YAAY,CAACY,OAAO,CAAC,UAAU,EAAE,IAAI,CAACzB,aAAa,CAAC;QACpD,IAAI,CAACI,OAAM,GAAI,KAAK;QAEpB,MAAMsB,MAAK,GAAI,IAAI/B,MAAM,CAAC,0BAA0B,CAAC;QACrD,IAAI,CAACQ,WAAU,GAAIP,KAAK,CAAC+B,IAAI,CAACD,MAAM,CAAC;QACrC,IAAI,CAACvB,WAAW,CAACyB,cAAa,GAAI,IAAI;QACtC,IAAI,CAACzB,WAAW,CAAC0B,SAAQ,GAAI,IAAI,CAACC,WAAW;QAC7C,IAAI,CAAC3B,WAAW,CAAC4B,YAAW,GAAI,IAAI,CAACC,OAAO;QAE5C,IAAI,CAAC7B,WAAW,CAAC8B,QAAQ,CAAC,CAAC;MAC7B;IACF,CAAC;IAEDC,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAAC/B,WAAU,IAAK,IAAI,CAACA,WAAW,CAACgB,MAAM,EAAE;QAC/C,IAAI,CAACD,SAAS,CAAC,CAAC;QAChB,IAAI,CAACf,WAAW,CAACgC,UAAU,CAAC,CAAC;MAC/B;IACF,CAAC;IAEDL,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChC,iBAAgB,GAAI,IAAI;MAE7B,IAAI,CAACK,WAAW,CAACiC,SAAS,CAAC,eAAe,EAAE,IAAI,CAACC,iBAAiB,CAAC;MAEnE,IAAI,CAAClC,WAAW,CAACiB,IAAI,CACjB,mBAAmB,EACnB,CAAC,CAAC,EACFC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE,IAAI,CAACvB,aAAa;QAAEwB,IAAI,EAAE;MAAO,CAAC,CAC/D,CAAC;MAED,IAAI,CAACzB,YAAW,GAAI,KAAK;IAC3B,CAAC;IAEDiC,OAAOA,CAACM,KAAK,EAAE;MACbC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,IAAI,CAACvC,YAAW,GAAI,IAAI;MACxB,IAAI,CAACyC,IAAI,CACL,IAAI,EACJ,mBAAmB,EACnB,+EACJ,CAAC;IACH,CAAC;IAEDC,WAAWA,CAAA,EAAG;MACZ,MAAMC,cAAa,GAAI,IAAI,CAACzC,YAAY,CAACe,IAAI,CAAC,CAAC;MAC/C,IAAI0B,cAAa,IAAK,IAAI,CAAClC,mBAAkB,IAAK,KAAK,IAAI,CAACL,WAAU,IAAK,IAAI,CAACA,WAAW,CAACgB,MAAM,EAAE;QAClG,MAAMwB,WAAU,GAAI;UAClBpB,MAAM,EAAE,IAAI,CAACvB,aAAa;UAC1B4C,OAAO,EAAEF,cAAc;UACvBlB,IAAI,EAAE;QACR,CAAC;QACD,IAAI,CAACrB,WAAW,CAACiB,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACqB,WAAW,CAAC,CAAC;QAC/E,IAAI,CAAC1C,YAAW,GAAI,EAAE;MACxB,OAAO;QACLsC,OAAO,CAACD,KAAK,CAAC,oEAAoE,CAAC;MACrF;IACF,CAAC;IAEDD,iBAAiBA,CAACQ,OAAO,EAAE;MACzB,MAAMC,OAAM,GAAIzB,IAAI,CAAC0B,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC;MAExCF,OAAO,CAACG,YAAW,GAAIH,OAAO,CAACvB,MAAK,KAAM,IAAI,CAACvB,aAAa;MAE5D,IAAI8C,OAAO,CAACtB,IAAG,KAAM,MAAM,EAAE;QAC3BsB,OAAO,CAACF,OAAM,GAAI,GAAGE,OAAO,CAACvB,MAAM,UAAU;MAC/C,OAAO,IAAIuB,OAAO,CAACtB,IAAG,KAAM,OAAO,EAAE;QACnCsB,OAAO,CAACF,OAAM,GAAI,GAAGE,OAAO,CAACvB,MAAM,QAAQ;MAC7C;MAEA,MAAM2B,WAAU,GAAI,IAAI,CAAChD,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACO,MAAK,GAAI,CAAC,CAAC;MAC3D,IAAI,EAAEqC,OAAO,CAACtB,IAAG,KAAM,OAAM,IAAK0B,WAAU,IAAKA,WAAW,CAAC3B,MAAK,KAAMuB,OAAO,CAACvB,MAAK,IAAK2B,WAAW,CAAC1B,IAAG,KAAM,OAAO,CAAC,EAAE;QACvH,IAAI,CAACtB,QAAQ,CAACiD,IAAI,CAACL,OAAO,CAAC;MAC7B;MAEA,IAAI,CAACM,SAAS,CAAC,MAAM;QACnB,MAAMC,WAAU,GAAI,IAAI,CAACC,KAAK,CAACD,WAAW;QAC1C,IAAIA,WAAW,EAAE;UACfA,WAAW,CAACE,SAAQ,GAAIF,WAAW,CAACG,YAAY;QAClD;MACF,CAAC,CAAC;IACJ,CAAC;IAEDC,cAAcA,CAACC,aAAa,EAAE;MAC5B,IAAIC,IAAG,GAAI,CAAC;MACZ,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,aAAa,CAACjD,MAAM,EAAEmD,CAAC,EAAE,EAAE;QAC7CD,IAAG,GAAI,EAAC,GAAIA,IAAG,GAAID,aAAa,CAACG,UAAU,CAACD,CAAC,CAAC;MAChD;MACA,MAAME,KAAI,GAAIC,IAAI,CAACC,GAAG,CAACL,IAAG,GAAI,IAAI,CAACtD,MAAM,CAACI,MAAM,CAAC;MACjD,OAAO,IAAI,CAACJ,MAAM,CAACyD,KAAK,CAAC;IAC3B,CAAC;IAEDG,mBAAmBA,CAAA,EAAG;MACpB,IAAI,IAAI,CAAChE,YAAY,CAACQ,MAAK,GAAI,IAAI,CAACH,aAAa,EAAE;QACjD,IAAI,CAACL,YAAW,GAAI,IAAI,CAACA,YAAY,CAACiE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC5D,aAAa,CAAC;MACxE;IACF;EACF,CAAC;EACD6D,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxD,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}