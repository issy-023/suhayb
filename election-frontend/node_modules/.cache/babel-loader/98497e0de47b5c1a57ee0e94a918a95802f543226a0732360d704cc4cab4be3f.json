{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from '../config.js';\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport PVDA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport CDA from '../assets/party/cda.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/VijftigPlus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\nexport default {\n  name: 'CommunitiesComponent',\n  data() {\n    return {\n      showLoginPrompt: false,\n      showGuidelines: false,\n      communities: [],\n      loading: true,\n      selectedCommunityId: null,\n      joinedCommunityId: null,\n      partyImages: {\n        'vvd': VVD,\n        'd66': D66,\n        'pvv': PVV,\n        'pvda': PVDA,\n        'sp': SP,\n        'fvd': FVD,\n        'cda': CDA,\n        'denk': Denk,\n        'groenLinks': GroenLinks,\n        '50plus': VijftigPlus,\n        'bbb': BBB,\n        'ja21': JA21,\n        'nsc': NSC,\n        'opnl': OPNL,\n        'pvdd': PvdD,\n        'sgp': SGP,\n        'volt': Volt\n      }\n    };\n  },\n  created() {\n    this.fetchCommunities();\n  },\n  methods: {\n    fetchCommunities() {\n      fetch(`${API_URL}/api/communities`).then(response => response.json()).then(data => {\n        this.communities = data;\n        this.loading = false;\n      }).catch(error => {\n        console.error('Error fetching communities:', error);\n        this.loading = false;\n      });\n    },\n    getCommunityImage(communityName) {\n      return this.partyImages[communityName.toLowerCase()] || '';\n    },\n    openGuidelines(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n      } else {\n        this.selectedCommunityId = communityId;\n        this.showGuidelines = true;\n      }\n    },\n    closeGuidelines() {\n      this.showGuidelines = false;\n      this.selectedCommunityId = null;\n    },\n    acceptGuidelines() {\n      this.showGuidelines = false;\n      this.attemptJoinCommunity(this.selectedCommunityId);\n    },\n    attemptJoinCommunity(communityId) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        if (this.joinedCommunityId) {\n          alert('You can only join one community chat.');\n        } else {\n          this.joinCommunityAction(communityId);\n        }\n      } else {\n        this.showLoginPrompt = true;\n      }\n    },\n    async joinCommunityAction(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n        return;\n      }\n      try {\n        const decodedToken = jwtDecode(token);\n        const userId = decodedToken.id;\n        const response = await fetch(`${API_URL}/api/communities/${communityId}/join?userId=${userId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to join community chat.');\n        }\n        this.joinedCommunityId = communityId;\n        this.$router.push({\n          name: 'CommunityChat',\n          params: {\n            communityId\n          }\n        });\n      } catch (error) {\n        console.error('Error joining community chat:', error);\n        alert('An error occurred while trying to join the community.');\n      }\n    },\n    redirectToLogin() {\n      this.showLoginPrompt = false;\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["jwtDecode","API_URL","VVD","D66","PVV","PVDA","SP","FVD","CDA","Denk","GroenLinks","VijftigPlus","BBB","JA21","NSC","OPNL","PvdD","SGP","Volt","name","data","showLoginPrompt","showGuidelines","communities","loading","selectedCommunityId","joinedCommunityId","partyImages","created","fetchCommunities","methods","fetch","then","response","json","catch","error","console","getCommunityImage","communityName","toLowerCase","openGuidelines","communityId","token","localStorage","getItem","closeGuidelines","acceptGuidelines","attemptJoinCommunity","alert","joinCommunityAction","decodedToken","userId","id","method","headers","Authorization","ok","Error","$router","push","params","redirectToLogin"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/CommunitiesComponent.vue"],"sourcesContent":["<template>\n  <div class=\"community-list\">\n    <h2>Communities:</h2>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-if=\"!loading\">\n      <div v-for=\"community in communities\" :key=\"community.id\" class=\"community-card\">\n        <img class=\"image\" :src=\"getCommunityImage(community.name)\" :alt=\"community.name\" />\n        <div class=\"community-info\">\n          <h3>{{ community.name }}</h3>\n          <p>{{ community.description }}</p>\n          <div class=\"community-footer\">\n            <span>{{ community.members }} Members</span>\n            <button class=\"join-button\" @click=\"openGuidelines(community.id)\">JOIN</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"showLoginPrompt\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <p>Please log in to join a community.</p>\n        <button @click=\"redirectToLogin\" class=\"close-button\">Log In</button>\n      </div>\n    </div>\n\n    <div v-if=\"showGuidelines\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <h3>Community Guidelines</h3>\n        <ul>\n          <li>Be respectful to all members.</li>\n          <li>No spamming or inappropriate content.</li>\n          <li>Follow the community's specific rules.</li>\n          <li>Any violations may result in being reported or removed.</li>\n        </ul>\n        <div class=\"guidelines-actions\">\n          <button @click=\"acceptGuidelines\" class=\"accept-button\">Accept</button>\n          <button @click=\"closeGuidelines\" class=\"close-button\">Decline</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from '../config.js';\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport PVDA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport CDA from '../assets/party/cda.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/VijftigPlus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\n\nexport default {\n  name: 'CommunitiesComponent',\n  data() {\n    return {\n      showLoginPrompt: false,\n      showGuidelines: false,\n      communities: [],\n      loading: true,\n      selectedCommunityId: null,\n      joinedCommunityId: null,\n      partyImages: {\n        'vvd': VVD,\n        'd66': D66,\n        'pvv': PVV,\n        'pvda': PVDA,\n        'sp': SP,\n        'fvd': FVD,\n        'cda': CDA,\n        'denk': Denk,\n        'groenLinks': GroenLinks,\n        '50plus': VijftigPlus,\n        'bbb': BBB,\n        'ja21': JA21,\n        'nsc': NSC,\n        'opnl': OPNL,\n        'pvdd': PvdD,\n        'sgp': SGP,\n        'volt': Volt,\n      },\n    };\n  },\n  created() {\n    this.fetchCommunities();\n  },\n  methods: {\n    fetchCommunities() {\n      fetch(`${API_URL}/api/communities`)\n          .then((response) => response.json())\n          .then((data) => {\n            this.communities = data;\n            this.loading = false;\n          })\n          .catch((error) => {\n            console.error('Error fetching communities:', error);\n            this.loading = false;\n          });\n    },\n    getCommunityImage(communityName) {\n      return this.partyImages[communityName.toLowerCase()] || '';\n    },\n    openGuidelines(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n      } else {\n        this.selectedCommunityId = communityId;\n        this.showGuidelines = true;\n      }\n    },\n    closeGuidelines() {\n      this.showGuidelines = false;\n      this.selectedCommunityId = null;\n    },\n    acceptGuidelines() {\n      this.showGuidelines = false;\n      this.attemptJoinCommunity(this.selectedCommunityId);\n    },\n    attemptJoinCommunity(communityId) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        if (this.joinedCommunityId) {\n          alert('You can only join one community chat.');\n        } else {\n          this.joinCommunityAction(communityId);\n        }\n      } else {\n        this.showLoginPrompt = true;\n      }\n    },\n    async joinCommunityAction(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n        return;\n      }\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const userId = decodedToken.id;\n\n        const response = await fetch(`${API_URL}/api/communities/${communityId}/join?userId=${userId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to join community chat.');\n        }\n\n        this.joinedCommunityId = communityId;\n        this.$router.push({ name: 'CommunityChat', params: { communityId } });\n      } catch (error) {\n        console.error('Error joining community chat:', error);\n        alert('An error occurred while trying to join the community.');\n      }\n    },\n    redirectToLogin() {\n      this.showLoginPrompt = false;\n      this.$router.push({ name: 'Login' });\n    },\n  },\n};\n</script>\n<style scoped>\nhtml, body {\n  overflow-y: auto;\n  height: 100%;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 10px;\n  width: 500px;\n  max-width: 90%;\n  position: relative;\n}\n\n.chat-messages {\n  background-color: #f1f1f1;\n  padding: 1rem;\n  height: 300px;\n  overflow-y: auto;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n}\n\n.chat-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.profile-container {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.message-content {\n  background-color: #e9ecef;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 75%;\n}\n\n.comments {\n  margin-top: 10px;\n}\n\n.comment {\n  margin-left: 50px;\n  margin-top: 5px;\n}\n\ninput[type='text'] {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\n.close-button {\n  background-color: #ff5f5f;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.close-button:hover {\n  background-color: #ff1f1f;\n}\n\n.navbar {\n  background-color: #17003C;\n  padding: 1.5rem 0;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  z-index: 100;\n  border-bottom-left-radius: 100px;\n  border-bottom-right-radius: 100px;\n}\n\n.navbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 2rem;\n  font-size: 32px;\n}\n\n.navbar-logo {\n  width: 70px;\n  height: 70px;\n  padding-left: 2%;\n}\n\n.navbar ul {\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-end;\n  margin: 0;\n  padding-right: 5%;\n  flex: 1;\n  text-align: center;\n  overflow-y: auto;\n}\n\n.navbar ul li {\n  margin: 0 0.5rem;\n  overflow-y: auto;\n}\n\n.navbar ul li a {\n  color: white;\n  text-decoration: none;\n  font-size: 24px;\n  padding: 0.5rem 1rem;\n  display: block;\n  transition: color 0.3s ease;\n  cursor: pointer;\n  overflow-y: auto;\n}\n\n.navbar ul li a:hover {\n  color: #FF9900;\n}\n\n.community-list {\n  padding: 2rem;\n  background-color: #f8f8f8;\n  margin-top: 0px;\n  overflow-y: auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 1rem;\n  color: #17003C;\n}\n\n.community-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #17003C;\n  padding: 2rem;\n  border-radius: 20px;\n  margin-bottom: 1rem;\n  color: white;\n  width: 90%;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.image {\n  height: 15vh;\n  object-fit: contain;\n}\n\n.community-info {\n  flex: 1;\n  margin-left: 1rem;\n}\n\n.community-info h3 {\n  font-size: 20px;\n  margin: 0;\n}\n\n.community-info p {\n  background-color: white;\n  color: #17003C;\n  padding: 3rem;\n  border-radius: 10px;\n  margin: 0.5rem 0;\n}\n\n.community-footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.join-button {\n  background-color: #FF9900;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 50px;\n  color: white;\n  cursor: pointer;\n}\n.accept-button {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.accept-button:hover {\n  background-color: #218838;\n}\n\n.join-button:hover {\n  background-color: white;\n  color: #FF9900;\n  border: 1px solid #FF9900;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}