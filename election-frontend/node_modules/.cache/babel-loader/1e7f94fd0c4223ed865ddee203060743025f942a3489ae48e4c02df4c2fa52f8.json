{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatViewComponent',\n  data() {\n    return {\n      chat: {},\n      // De chat die we openen\n      chatMessages: [],\n      // Berichten binnen de chat\n      newMessage: \"\"\n    };\n  },\n  methods: {\n    loadChat() {\n      const chatId = this.$route.params.chatId; // Haal de chat-ID op uit de URL\n      const allChats = JSON.parse(localStorage.getItem('chats')) || []; // Laad chats van localStorage of een andere opslag\n\n      // Zoek de chat met de bijbehorende ID\n      const chat = allChats.find(c => c.id == chatId);\n      if (chat) {\n        this.chat = chat;\n        this.chatMessages = chat.messages || []; // Laad de berichten binnen de chat\n      } else {\n        alert('Chat not found');\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.chatMessages.push(this.newMessage); // Voeg bericht toe aan de berichtenlijst\n        this.newMessage = \"\"; // Maak het inputveld leeg\n        // Update de berichtenlijst in de opgeslagen chats\n        const allChats = JSON.parse(localStorage.getItem('chats')) || [];\n        const chatIndex = allChats.findIndex(c => c.id == this.chat.id);\n        if (chatIndex !== -1) {\n          allChats[chatIndex].messages = this.chatMessages;\n          localStorage.setItem('chats', JSON.stringify(allChats)); // Update localStorage\n        }\n      }\n    }\n  },\n  mounted() {\n    this.loadChat(); // Laad de chat wanneer de component wordt gemount\n  }\n};","map":{"version":3,"names":["name","data","chat","chatMessages","newMessage","methods","loadChat","chatId","$route","params","allChats","JSON","parse","localStorage","getItem","find","c","id","messages","alert","sendMessage","trim","push","chatIndex","findIndex","setItem","stringify","mounted"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/ChatViewComponent.vue"],"sourcesContent":["<template>\n  <div class=\"chat-view-container\">\n    <!-- Toon de naam van de chat bovenaan -->\n    <h2>Chat: {{ chat.name }}</h2>\n\n    <div class=\"chat-messages\">\n      <div v-for=\"(message, index) in chatMessages\" :key=\"index\" class=\"message\">\n        {{ message }}\n      </div>\n    </div>\n\n    <div class=\"new-message\">\n      <input v-model=\"newMessage\" placeholder=\"Type your message...\" />\n      <button @click=\"sendMessage\">Send</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatViewComponent',\n  data() {\n    return {\n      chat: {}, // De chat die we openen\n      chatMessages: [], // Berichten binnen de chat\n      newMessage: \"\"\n    };\n  },\n  methods: {\n    loadChat() {\n      const chatId = this.$route.params.chatId; // Haal de chat-ID op uit de URL\n      const allChats = JSON.parse(localStorage.getItem('chats')) || []; // Laad chats van localStorage of een andere opslag\n\n      // Zoek de chat met de bijbehorende ID\n      const chat = allChats.find(c => c.id == chatId);\n      if (chat) {\n        this.chat = chat;\n        this.chatMessages = chat.messages || []; // Laad de berichten binnen de chat\n      } else {\n        alert('Chat not found');\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.chatMessages.push(this.newMessage); // Voeg bericht toe aan de berichtenlijst\n        this.newMessage = \"\"; // Maak het inputveld leeg\n        // Update de berichtenlijst in de opgeslagen chats\n        const allChats = JSON.parse(localStorage.getItem('chats')) || [];\n        const chatIndex = allChats.findIndex(c => c.id == this.chat.id);\n        if (chatIndex !== -1) {\n          allChats[chatIndex].messages = this.chatMessages;\n          localStorage.setItem('chats', JSON.stringify(allChats)); // Update localStorage\n        }\n      }\n    }\n  },\n  mounted() {\n    this.loadChat(); // Laad de chat wanneer de component wordt gemount\n  }\n};\n</script>\n\n<style scoped>\n.chat-view-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.chat-messages {\n  height: 300px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  padding: 10px;\n  background-color: white;\n}\n\n.message {\n  padding: 5px;\n  border-bottom: 1px solid #ddd;\n}\n\n.new-message {\n  display: flex;\n  justify-content: space-between;\n}\n\ninput {\n  flex: 1;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAmBA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MAAE;MACVC,YAAY,EAAE,EAAE;MAAE;MAClBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM,EAAE;MAC1C,MAAMG,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;;MAElE;MACA,MAAMZ,IAAG,GAAIQ,QAAQ,CAACK,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,IAAKV,MAAM,CAAC;MAC/C,IAAIL,IAAI,EAAE;QACR,IAAI,CAACA,IAAG,GAAIA,IAAI;QAChB,IAAI,CAACC,YAAW,GAAID,IAAI,CAACgB,QAAO,IAAK,EAAE,EAAE;MAC3C,OAAO;QACLC,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAAChB,UAAU,CAACiB,IAAI,CAAC,CAAC,EAAE;QAC1B,IAAI,CAAClB,YAAY,CAACmB,IAAI,CAAC,IAAI,CAAClB,UAAU,CAAC,EAAE;QACzC,IAAI,CAACA,UAAS,GAAI,EAAE,EAAE;QACtB;QACA,MAAMM,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE;QAChE,MAAMS,SAAQ,GAAIb,QAAQ,CAACc,SAAS,CAACR,CAAA,IAAKA,CAAC,CAACC,EAAC,IAAK,IAAI,CAACf,IAAI,CAACe,EAAE,CAAC;QAC/D,IAAIM,SAAQ,KAAM,CAAC,CAAC,EAAE;UACpBb,QAAQ,CAACa,SAAS,CAAC,CAACL,QAAO,GAAI,IAAI,CAACf,YAAY;UAChDU,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAChB,QAAQ,CAAC,CAAC,EAAE;QAC3D;MACF;IACF;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,QAAQ,CAAC,CAAC,EAAE;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}