{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '@/config';\nexport default {\n  name: 'AdminPage',\n  data() {\n    return {\n      users: [],\n      searchTerm: ''\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => user.email.toLowerCase().includes(this.searchTerm.toLowerCase()));\n    }\n  },\n  methods: {\n    isLoggedIn() {\n      // Replace with your actual logic for checking if the user is logged in\n      return !!localStorage.getItem('userId');\n    },\n    isAdmin() {\n      // Replace with your actual logic for checking if the user is an admin\n      return true; // or some condition based on user role\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API_URL}/admin/users`);\n        this.users = response.data;\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    },\n    async toggleUserStatus(userId, isActive) {\n      const adminId = localStorage.getItem('userId');\n      try {\n        await axios.put(`${API_URL}/user/${userId}/status`, null, {\n          params: {\n            isActive: !isActive\n          },\n          headers: {\n            'Content-Type': 'application/json',\n            UserId: adminId\n          }\n        });\n        const user = this.users.find(u => u.id === userId);\n        if (user) {\n          user.active = !isActive;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 403) {\n          window.alert('You cannot deactivate your own account.');\n        } else {\n          console.error('Error updating user status:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","API_URL","name","data","users","searchTerm","computed","filteredUsers","filter","user","email","toLowerCase","includes","methods","isLoggedIn","localStorage","getItem","isAdmin","fetchUsers","response","get","error","console","toggleUserStatus","userId","isActive","adminId","put","params","headers","UserId","find","u","id","active","status","window","alert","mounted"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/AdminPageComponent.vue"],"sourcesContent":["\n<template>\n  <div class=\"parent\">\n    <div id=\"nav\"><h1>Admin</h1>\n      <div class=\"profileBtn\" v-if=\"isLoggedIn()\">\n        <div class=\"dropdown\">\n          <button class=\"dropbtn\">Profile</button>\n          <div class=\"dropdown-content\"><a @click=\"$router.push('/profile')\">Profile</a> <a v-if=\"isAdmin()\"\n                                                                                            @click=\"$router.push('/admin')\">Admin</a>\n            <a @click=\"logOut()\">Logout</a></div>\n        </div>\n      </div>\n    </div>\n    <div id=\"left\"><h1>Overview</h1>\n      <button class=\"btn\" @click=\"$router.push('/')\">Home</button>\n      <button class=\"btn\" @click=\"$router.push('/results')\">Election results</button>\n      <button class=\"btn\" @click=\"$router.push('/chat')\">Chat</button>\n      <button class=\"btn\" @click=\"$router.push('/faq')\">Faq</button>\n      <button class=\"btn\" @click=\"$router.push('/about')\">About us</button>\n    </div>\n    <div id=\"body\">\n      <div class=\"header-container\"><h1>Userlist</h1>        <input v-model=\"searchTerm\" type=\"text\"\n                                                                    placeholder=\"Search users by email...\"\n                                                                    class=\"search-input\"/></div>\n      <div class=\"table__body\">\n        <table>\n          <thead>\n          <tr>\n            <th> Id</th>\n            <th> Name</th>\n            <th> Surname</th>\n            <th> Email</th>\n            <th> Account status</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\n            <td>{{ user.id }}</td>\n            <td>{{ user.name }}</td>\n            <td>{{ user.surname }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n              <button :id=\"'button-' + user.id\" :class=\"{'active-btn': user.active, 'inactive-btn': !user.active}\"\n                      @click=\"toggleUserStatus(user.id, user.active)\"> {{ user.active ? 'Active' : 'Deactivate' }}\n              </button>\n            </td>\n          </tr>\n          <tr v-if=\"filteredUsers.length === 0\">\n            <td colspan=\"5\" style=\"text-align: center;\">No users found</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n</template>\n<script>\n\nimport axios from 'axios';\nimport { API_URL } from '@/config';\n\nexport default {\n  name: 'AdminPage',\n  data() {\n    return {\n      users: [],\n      searchTerm: '',\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user =>\n          user.email.toLowerCase().includes(this.searchTerm.toLowerCase())\n      );\n    },\n  },\n  methods: {\n    isLoggedIn() {\n      // Replace with your actual logic for checking if the user is logged in\n      return !!localStorage.getItem('userId');\n    },\n    isAdmin() {\n      // Replace with your actual logic for checking if the user is an admin\n      return true; // or some condition based on user role\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API_URL}/admin/users`);\n        this.users = response.data;\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    },\n    async toggleUserStatus(userId, isActive) {\n      const adminId = localStorage.getItem('userId');\n      try {\n        await axios.put(`${API_URL}/user/${userId}/status`, null, {\n          params: { isActive: !isActive },\n          headers: {\n            'Content-Type': 'application/json',\n            UserId: adminId,\n          },\n        });\n        const user = this.users.find(u => u.id === userId);\n        if (user) {\n          user.active = !isActive;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 403) {\n          window.alert('You cannot deactivate your own account.');\n        } else {\n          console.error('Error updating user status:', error);\n        }\n      }\n    },\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n};\n</script>\n\n\n<style scoped>\n.parent {\n  display: grid;\n  grid-template-rows: 0.2fr 1fr;\n  grid-template-columns: 0.5fr 1fr 1fr;\n  height: 100vh;\n}\n\n#left {\n  background-color: #17003C;\n  grid-row: 2 / 4;\n  grid-column: 1 / 2;\n  padding-left: 2rem;\n}\n\n#nav {\n  background-color: #17003C;\n  grid-row: 1 / 2;\n  grid-column: 1 / 4;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 2rem;\n}\n\n#body {\n  grid-row: 2 / 4;\n  grid-column: 2 / 4;\n  padding: 1rem;\n}\n\n#footer {\n  margin: 0;\n}\n\n.btn {\n  width: 90%;\n  height: 5%;\n}\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: white;\n  min-width: 160px;\n}\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n.dropdown-content a:hover {\n  background-color: #1D4BF2;\n  color: white;\n  cursor: pointer;\n}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n\n.table__body {\n  width: 95%;\n  max-height: 80%;\n  background-color: #fffb;\n  margin: .8rem auto;\n  border-radius: .6rem;\n  overflow-y: auto;\n}\n\ntable {\n  width: 100%;\n}\n\ntable, th, td {\n  border-collapse: collapse;\n  padding: 1rem;\n  text-align: left;\n}\n\nthead th {\n  position: sticky;\n  top: 0;\n  background-color: #d5d1defe;\n  z-index: 1;\n}\n\ntbody tr:nth-child(even) {\n  background-color: #0000000b;\n}\n\n#button {\n  width: 80%;\n}\n\n.header-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.search-input {\n  max-width: 20%;\n  padding: 0.5rem;\n  margin-left: 45rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.active-btn {\n  background-color: blue; /* Actief is blauw */\n}\n\n.inactive-btn {\n  background-color: grey; /* Inactief is grijs */\n}</style>"],"mappings":"AA2DA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,OAAM,QAAS,UAAU;AAElC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,IAAG,IACxBA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CACnE,CAAC;IACH;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACzC,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR;MACA,OAAO,IAAI,EAAE;IACf,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,cAAc,CAAC;QAC1D,IAAI,CAACG,KAAI,GAAIe,QAAQ,CAAChB,IAAI;MAC5B,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;MACvC,MAAMC,OAAM,GAAIX,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC9C,IAAI;QACF,MAAMhB,KAAK,CAAC2B,GAAG,CAAC,GAAG1B,OAAO,SAASuB,MAAM,SAAS,EAAE,IAAI,EAAE;UACxDI,MAAM,EAAE;YAAEH,QAAQ,EAAE,CAACA;UAAS,CAAC;UAC/BI,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,MAAM,EAAEJ;UACV;QACF,CAAC,CAAC;QACF,MAAMjB,IAAG,GAAI,IAAI,CAACL,KAAK,CAAC2B,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMT,MAAM,CAAC;QAClD,IAAIf,IAAI,EAAE;UACRA,IAAI,CAACyB,MAAK,GAAI,CAACT,QAAQ;QACzB;MACF,EAAE,OAAOJ,KAAK,EAAE;QACd,IAAIA,KAAK,CAACF,QAAO,IAAKE,KAAK,CAACF,QAAQ,CAACgB,MAAK,KAAM,GAAG,EAAE;UACnDC,MAAM,CAACC,KAAK,CAAC,yCAAyC,CAAC;QACzD,OAAO;UACLf,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}