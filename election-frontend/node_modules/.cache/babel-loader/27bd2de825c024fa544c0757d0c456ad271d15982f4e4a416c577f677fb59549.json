{"ast":null,"code":"// src/adapters/PartyAdapter.js\nimport axios from 'axios';\nimport BBB from '../assets/party/bbb.png';\nimport Bij1 from '../assets/party/bij1.png';\nimport BVNL from '../assets/party/bvnl.png';\nimport CDA from '../assets/party/cda.png';\nimport CU from '../assets/party/cu.png';\nimport D66 from '../assets/party/d66.png';\nimport Denk from '../assets/party/denk.png';\nimport FVD from '../assets/party/fvd.png';\nimport GLPVDA from '../assets/party/glpvda.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport JA21 from '../assets/party/ja21.png';\nimport LEF from '../assets/party/lef.png';\nimport LP from '../assets/party/lp.png';\nimport NLPLAN from '../assets/party/nlplan.webp';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PartijvdSport from '../assets/party/PartijvdSport.png';\nimport Piraten from '../assets/party/piraten.png';\nimport PPvB from '../assets/party/ppvb.png';\nimport PvdA from '../assets/party/pvda.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport PVV from '../assets/party/pvv.png';\nimport SGP from '../assets/party/sgp.png';\nimport SP from '../assets/party/sp.png';\nimport Splinter from '../assets/party/splinter.png';\nimport SVN from '../assets/party/svn.png';\nimport VijftigPlus from '../assets/party/50plus.png';\nimport Volt from '../assets/party/volt.png';\nimport VVD from '../assets/party/vvd.png';\nconst imageMap = {\n  BBB,\n  Bij1,\n  BVNL,\n  CDA,\n  CU,\n  D66,\n  Denk,\n  FVD,\n  GLPVDA,\n  GroenLinks,\n  JA21,\n  LEF,\n  LP,\n  NLPLAN,\n  NSC,\n  OPNL,\n  PartijvdSport,\n  Piraten,\n  PPvB,\n  PvdA,\n  PvdD,\n  PVV,\n  SGP,\n  SP,\n  Splinter,\n  SVN,\n  VijftigPlus,\n  Volt,\n  VVD\n};\nclass PartyAdapter {\n  constructor(baseURL) {\n    this.api = axios.create({\n      baseURL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  async getParties(page, size) {\n    try {\n      const response = await this.api.get(`api/v1/parties`, {\n        params: {\n          page,\n          size\n        }\n      });\n      const {\n        parties,\n        totalPages\n      } = response.data;\n      const partyWithImage = this.matchImageToParty(parties);\n      return {\n        parties: partyWithImage,\n        totalPages\n      };\n    } catch (error) {\n      console.error('Error fetching parties:', error);\n      throw new Error('Failed to fetch party data');\n    }\n  }\n  matchImageToParty(rawData) {\n    return rawData.map(party => ({\n      ...party,\n      image: imageMap[party.abbreviation] || null\n    }));\n  }\n}\nexport default PartyAdapter;","map":{"version":3,"names":["axios","BBB","Bij1","BVNL","CDA","CU","D66","Denk","FVD","GLPVDA","GroenLinks","JA21","LEF","LP","NLPLAN","NSC","OPNL","PartijvdSport","Piraten","PPvB","PvdA","PvdD","PVV","SGP","SP","Splinter","SVN","VijftigPlus","Volt","VVD","imageMap","PartyAdapter","constructor","baseURL","api","create","headers","getParties","page","size","response","get","params","parties","totalPages","data","partyWithImage","matchImageToParty","error","console","Error","rawData","map","party","image","abbreviation"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/adapters/PartyAdapter.js"],"sourcesContent":["// src/adapters/PartyAdapter.js\nimport axios from 'axios';\n\nimport BBB from '../assets/party/bbb.png';\nimport Bij1 from '../assets/party/bij1.png';\nimport BVNL from '../assets/party/bvnl.png';\nimport CDA from '../assets/party/cda.png';\nimport CU from '../assets/party/cu.png';\nimport D66 from '../assets/party/d66.png';\nimport Denk from '../assets/party/denk.png';\nimport FVD from '../assets/party/fvd.png';\nimport GLPVDA from '../assets/party/glpvda.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport JA21 from '../assets/party/ja21.png';\nimport LEF from '../assets/party/lef.png';\nimport LP from '../assets/party/lp.png';\nimport NLPLAN from '../assets/party/nlplan.webp';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PartijvdSport from '../assets/party/PartijvdSport.png';\nimport Piraten from '../assets/party/piraten.png';\nimport PPvB from '../assets/party/ppvb.png';\nimport PvdA from '../assets/party/pvda.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport PVV from '../assets/party/pvv.png';\nimport SGP from '../assets/party/sgp.png';\nimport SP from '../assets/party/sp.png';\nimport Splinter from '../assets/party/splinter.png';\nimport SVN from '../assets/party/svn.png';\nimport VijftigPlus from '../assets/party/50plus.png';\nimport Volt from '../assets/party/volt.png';\nimport VVD from '../assets/party/vvd.png';\n\nconst imageMap = {\n    BBB,\n    Bij1,\n    BVNL,\n    CDA,\n    CU,\n    D66,\n    Denk,\n    FVD,\n    GLPVDA,\n    GroenLinks,\n    JA21,\n    LEF,\n    LP,\n    NLPLAN,\n    NSC,\n    OPNL,\n    PartijvdSport,\n    Piraten,\n    PPvB,\n    PvdA,\n    PvdD,\n    PVV,\n    SGP,\n    SP,\n    Splinter,\n    SVN,\n    VijftigPlus,\n    Volt,\n    VVD,\n};\n\nclass PartyAdapter {\n    constructor(baseURL) {\n        this.api = axios.create({\n            baseURL,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n\n    async getParties(page, size) {\n        try {\n            const response = await this.api.get(`api/v1/parties`, {\n                params: { page, size },\n            });\n            const { parties, totalPages } = response.data;\n            const partyWithImage = this.matchImageToParty(parties);\n            return { parties: partyWithImage, totalPages};\n        } catch (error) {\n            console.error('Error fetching parties:', error);\n            throw new Error('Failed to fetch party data');\n        }\n    }\n\n    matchImageToParty(rawData){\n        return rawData.map(party => ({\n            ...party,\n            image: imageMap[party.abbreviation] || null,\n        }));\n    }\n}\n\nexport default PartyAdapter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}