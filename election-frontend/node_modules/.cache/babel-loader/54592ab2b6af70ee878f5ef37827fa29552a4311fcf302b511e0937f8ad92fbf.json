{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-page\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-header\"\n};\nconst _hoisted_4 = {\n  class: \"connecting\"\n};\nconst _hoisted_5 = {\n  class: \"message-area\",\n  ref: \"messageArea\"\n};\nconst _hoisted_6 = {\n  class: \"sender-name\"\n};\nconst _hoisted_7 = {\n  class: \"message-content\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"input-group clearfix\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"popup-overlay\"\n};\nconst _hoisted_12 = {\n  class: \"popup\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"noscript\", null, [_createElementVNode(\"h2\", null, \"Sorry! Your browser doesn't support Javascript\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, \"Welcome to the livechat \" + _toDisplayString($data.usernameInput), 1 /* TEXT */), $data.hasJoined ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.leaveChat && $options.leaveChat(...args)),\n    class: \"leave-button\"\n  }, \"Leave\")) : _createCommentVNode(\"v-if\", true)]), _withDirectives(_createElementVNode(\"div\", _hoisted_4, \" Connecting... \", 512 /* NEED_PATCH */), [[_vShow, $data.isConnecting]]), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass(['message-container', message.isOwnMessage ? 'own-message-container' : 'other-message-container'])\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass(message.isOwnMessage ? 'own-message' : 'other-message')\n    }, [message.type === 'CHAT' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"i\", {\n      style: _normalizeStyle({\n        backgroundColor: $options.getAvatarColor(message.sender)\n      })\n    }, _toDisplayString(message.sender[0]), 5 /* TEXT, STYLE */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(message.sender), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(message.content), 1 /* TEXT */)], 2 /* CLASS */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createCommentVNode(\" Formulier om berichten te versturen, alleen zichtbaar na 'Join' \"), $data.hasJoined ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.messageInput = $event),\n    placeholder: \"Type a message...\",\n    autocomplete: \"off\",\n    class: \"form-control\",\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.checkCharacterLimit && $options.checkCharacterLimit(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.messageInput]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"primary\",\n    disabled: $options.remainingCharacters < 0\n  }, \"Send\", 8 /* PROPS */, _hoisted_10)]), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"character-count\", {\n      'over-limit': $options.remainingCharacters < 0\n    }])\n  }, \" Characters left: \" + _toDisplayString($options.remainingCharacters), 3 /* TEXT, CLASS */)])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Join-knop onderaan de chat, alleen zichtbaar als de gebruiker niet gejoined is \"), !$data.hasJoined ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.joinChat && $options.joinChat(...args)),\n    class: \"join-button\"\n  }, \" Join \")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Popup \"), $data.showLoginPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"You need to log in to chat\", -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"Please log in to participate in the chat.\", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"a\", {\n    href: \"/login\",\n    class: \"login-link\"\n  }, \"Go to Login Page\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closePopup && $options.closePopup(...args)),\n    class: \"close-button\"\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","usernameInput","hasJoined","onClick","_cache","args","$options","leaveChat","_createCommentVNode","_hoisted_4","isConnecting","_hoisted_5","_Fragment","_renderList","messages","message","index","_normalizeClass","isOwnMessage","type","style","_normalizeStyle","backgroundColor","getAvatarColor","sender","_hoisted_6","_hoisted_7","content","onSubmit","_withModifiers","sendMessage","_hoisted_8","_hoisted_9","$event","messageInput","placeholder","autocomplete","onInput","checkCharacterLimit","disabled","remainingCharacters","_hoisted_10","joinChat","showLoginPopup","_hoisted_11","_hoisted_12","href","closePopup"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/LiveChatPageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <noscript>\n      <h2>Sorry! Your browser doesn't support Javascript</h2>\n    </noscript>\n\n    <div class=\"chat-page\">\n      <div class=\"chat-container\">\n        <div class=\"chat-header\">\n          <h3>Welcome to the livechat {{ usernameInput }}</h3>\n          <button @click=\"leaveChat\" class=\"leave-button\" v-if=\"hasJoined\">Leave</button>\n        </div>\n        <div class=\"connecting\" v-show=\"isConnecting\">\n          Connecting...\n        </div>\n        <ul class=\"message-area\" ref=\"messageArea\">\n          <li\n              v-for=\"(message, index) in messages\"\n              :key=\"index\"\n              :class=\"[\n    'message-container',\n    message.isOwnMessage ? 'own-message-container' : 'other-message-container'\n  ]\"\n          >\n            <div :class=\"message.isOwnMessage ? 'own-message' : 'other-message'\">\n              <template v-if=\"message.type === 'CHAT'\">\n                <i :style=\"{ backgroundColor: getAvatarColor(message.sender) }\">\n                  {{ message.sender[0] }}\n                </i>\n                <span class=\"sender-name\">{{ message.sender }}</span>\n              </template>\n              <p class=\"message-content\">{{ message.content }}</p>\n            </div>\n          </li>\n        </ul>\n\n        <!-- Formulier om berichten te versturen, alleen zichtbaar na 'Join' -->\n        <form @submit.prevent=\"sendMessage\" v-if=\"hasJoined\">\n          <div class=\"form-group\">\n            <div class=\"input-group clearfix\">\n              <input\n                  type=\"text\"\n                  v-model=\"messageInput\"\n                  placeholder=\"Type a message...\"\n                  autocomplete=\"off\"\n                  class=\"form-control\"\n                  @input=\"checkCharacterLimit\"\n              />\n              <button type=\"submit\" class=\"primary\" :disabled=\"remainingCharacters < 0\">Send</button>\n            </div>\n            <p class=\"character-count\" :class=\"{ 'over-limit': remainingCharacters < 0 }\">\n              Characters left: {{ remainingCharacters }}\n            </p>\n          </div>\n        </form>\n\n        <!-- Join-knop onderaan de chat, alleen zichtbaar als de gebruiker niet gejoined is -->\n        <button v-if=\"!hasJoined\" @click=\"joinChat\" class=\"join-button\">\n          Join\n        </button>\n      </div>\n\n      <!-- Popup -->\n      <div v-if=\"showLoginPopup\" class=\"popup-overlay\">\n        <div class=\"popup\">\n          <h3>You need to log in to chat</h3>\n          <p>Please log in to participate in the chat.</p>\n          <a href=\"/login\" class=\"login-link\">Go to Login Page</a>\n          <button @click=\"closePopup\" class=\"close-button\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nexport default {\n  data() {\n    return {\n      isConnecting: true,\n      usernameInput: \"\",\n      messageInput: \"\",\n      messages: [],\n      stompClient: null,\n      hasLeft: false,\n      hasJoined: false,\n      colors: [\"#2196F3\", \"#32c787\", \"#00BCD4\", \"#ff5652\", \"#ffc107\", \"#ff85af\", \"#FF9800\", \"#39bbb0\"],\n      maxCharacters: 220,\n      token: \"\", // Token van de gebruiker\n      showLoginPopup: false, // Nieuw: Beheert de zichtbaarheid van de popup\n    };\n  },\n\n  computed: {\n    remainingCharacters() {\n      return this.maxCharacters - this.messageInput.length;\n    }\n  },\n  methods: {\n    loadUsername() {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        this.token = token;\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        this.usernameInput = payload.username || `Anonymous${Math.floor(Math.random() * 1000)}`;\n      } else {\n        this.usernameInput = \"You are not logged in\";\n      }\n\n      localStorage.setItem(\"username\", this.usernameInput);\n    },\n\n    async loadRecentMessages() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const headers = token\n            ? { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\n            : { \"Content-Type\": \"application/json\" };\n\n        const response = await fetch(\"http://localhost:8084/api/chat/recentMessages\", {\n          method: \"GET\",\n          headers,\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.messages = data.map((message) => ({\n            ...message,\n            isOwnMessage: message.sender === this.usernameInput,\n          }));\n        } else {\n          console.error(\"Failed to load recent messages.\");\n        }\n      } catch (error) {\n        console.error(\"Error loading recent messages:\", error);\n      }\n    },\n\n    connect() {\n      if (this.usernameInput.trim() && !this.stompClient?.active) {\n        this.hasLeft = false;\n\n        const socket = new SockJS(\"http://localhost:8084/ws\");\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.reconnectDelay = 5000;\n        this.stompClient.onConnect = this.onConnected;\n        this.stompClient.onStompError = this.onError;\n\n        this.stompClient.activate();\n      }\n    },\n\n    joinChat() {\n      if (!this.token) {\n        // Toon de popup in plaats van een alert\n        this.showLoginPopup = true;\n        return;\n      }\n\n      if (!this.hasJoined) {\n        this.hasJoined = true;\n\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            { Authorization: `Bearer ${this.token}` },\n            JSON.stringify({ sender: this.usernameInput, type: \"JOIN\" })\n        );\n      }\n    },\n\n    sendMessage() {\n      const messageContent = this.messageInput.trim();\n      if (messageContent && this.remainingCharacters >= 0 && this.stompClient && this.stompClient.active) {\n        const chatMessage = {\n          sender: this.usernameInput,\n          content: messageContent,\n          type: \"CHAT\",\n        };\n\n        this.stompClient.send(\"/app/chat.sendMessage\", { Authorization: `Bearer ${this.token}` }, JSON.stringify(chatMessage));\n        this.messageInput = \"\";\n      }\n    },\n\n    leaveChat() {\n      if (this.stompClient && this.stompClient.active && this.hasJoined) {\n        this.stompClient.send(\n            \"/app/chat.addUser\",\n            {},\n            JSON.stringify({ sender: this.usernameInput, type: \"LEAVE\" })\n        );\n        this.hasLeft = true;\n        this.hasJoined = false;\n      }\n      this.stompClient.deactivate();\n    },\n\n    closePopup() {\n      this.showLoginPopup = false;\n    },\n\n    onConnected() {\n      this.stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\n      this.isConnecting = false;\n    },\n\n    onError(error) {\n      console.error(\"WebSocket Error:\", error);\n      this.isConnecting = true;\n    },\n\n    onMessageReceived(payload) {\n      const message = JSON.parse(payload.body);\n      message.isOwnMessage = message.sender === this.usernameInput;\n\n      if (message.type === \"JOIN\") {\n        message.content = `${message.sender} joined!`;\n      } else if (message.type === \"LEAVE\") {\n        message.content = `${message.sender} left!`;\n      }\n\n      this.messages.push(message);\n\n      if (this.messages.length > 10000) {\n        this.messages.shift(); // Verwijder het oudste bericht om alleen de laatste 20 berichten te behouden\n      }\n\n      this.$nextTick(() => {\n        const messageArea = this.$refs.messageArea;\n        if (messageArea) {\n          messageArea.scrollTop = messageArea.scrollHeight;\n        }\n      });\n    },\n\n    getAvatarColor(messageSender) {\n      let hash = 0;\n      for (let i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n      }\n      const index = Math.abs(hash % this.colors.length);\n      return this.colors[index];\n    },\n\n    checkCharacterLimit() {\n      if (this.messageInput.length > this.maxCharacters) {\n        this.messageInput = this.messageInput.substring(0, this.maxCharacters);\n      }\n    }\n  },\n  mounted() {\n    this.token = localStorage.getItem(\"token\");\n    this.loadUsername();\n    this.connect();\n    this.loadRecentMessages();\n  },\n  beforeUnmount() {\n    if (this.stompClient && this.stompClient.active) {\n      this.leaveChat();\n      this.stompClient.deactivate();\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n/* Algemene stijlen */\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f4f4f4;\n}\n\n/* Chat-container */\n.chat-container {\n  width: 800px;\n  margin: 50px auto;\n  background-color: #ffffff;\n  border: 2px solid #000;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n/* Header */\n.chat-header {\n  background-color: #2d0353;\n  color: #fff;\n  text-align: center;\n  padding: 15px;\n  font-size: 24px; /* Vergroot de tekst in de header */\n  font-weight: bold;\n  border-bottom: 2px solid #000;\n}\n\n/* Berichtenlijst */\n.message-area {\n  padding: 10px;\n  height: 400px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n/* Berichten */\n.message-container {\n  display: flex;\n  align-items: center;\n  max-width: 80%;\n}\n\n.own-message-container {\n  justify-content: flex-end;\n  align-self: flex-end;\n}\n\n.other-message-container {\n  justify-content: flex-start;\n  align-self: flex-start;\n}\n\n.message-content {\n  background-color: #2d0353;\n  color: #fff;\n  padding: 15px 20px;\n  border-radius: 15px;\n  font-size: 18px;\n  line-height: 1.6;\n  max-width: 680px;\n  word-wrap: break-word;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.other-message-container .message-content {\n  background-color: #f4f4f4;\n  color: #000;\n  border: 2px solid #000;\n}\n\n.own-message-container .message-content {\n  border-radius: 15px 15px 0 15px;\n}\n\n.other-message-container .message-content {\n  border-radius: 15px 15px 15px 0;\n}\n\n/* Avatar */\n.message-container i {\n  width: 30px;\n  height: 30px;\n  background-color: #aaa;\n  color: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  margin: 0 10px;\n}\n\n/* Inputformulier */\nform {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 10px;\n  border-top: 2px solid #000;\n  background-color: #fff;\n}\n\nform input {\n  width: 100%;\n  padding: 15px;\n  border: 2px solid #000;\n  border-radius: 15px;\n  font-size: 18px;\n  margin-bottom: 10px;\n}\n\nform button {\n  background-color: #ff9933;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 15px;\n  font-size: 18px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\nform button:hover {\n  background-color: #cc7a29;\n}\n\n.join-button {\n  background-color: #ff9933;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 15px;\n  font-size: 18px;\n  cursor: pointer;\n  font-weight: bold;\n  text-align: center;\n  margin: 10px auto;\n  display: block;\n}\n\n.join-button:hover {\n  background-color: #cc7a29;\n}\n\n@media screen and (max-width: 480px) {\n  .chat-container {\n    width: 90%;\n    margin: 20px auto;\n  }\n\n  .message-content {\n    font-size: 16px;\n  }\n\n  form input {\n    font-size: 16px;\n    padding: 10px;\n  }\n\n  form button {\n    padding: 10px 15px;\n    font-size: 16px;\n  }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}