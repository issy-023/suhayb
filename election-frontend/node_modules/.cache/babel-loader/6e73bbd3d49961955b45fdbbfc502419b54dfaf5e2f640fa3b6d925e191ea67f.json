{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-view-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_3 = {\n  class: \"new-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Toon de naam van de chat bovenaan \"), _createElementVNode(\"h2\", null, \"Chat: \" + _toDisplayString($data.chat.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, _toDisplayString(message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    placeholder: \"Type your message...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_toDisplayString","$data","chat","name","_hoisted_2","_Fragment","_renderList","chatMessages","message","index","key","_hoisted_3","_cache","$event","newMessage","placeholder","onClick","args","$options","sendMessage"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/ChatViewComponent.vue"],"sourcesContent":["<template>\n  <div class=\"chat-view-container\">\n    <!-- Toon de naam van de chat bovenaan -->\n    <h2>Chat: {{ chat.name }}</h2>\n\n    <div class=\"chat-messages\">\n      <div v-for=\"(message, index) in chatMessages\" :key=\"index\" class=\"message\">\n        {{ message }}\n      </div>\n    </div>\n\n    <div class=\"new-message\">\n      <input v-model=\"newMessage\" placeholder=\"Type your message...\" />\n      <button @click=\"sendMessage\">Send</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatViewComponent',\n  data() {\n    return {\n      chat: {}, // De chat die we openen\n      chatMessages: [], // Berichten binnen de chat\n      newMessage: \"\"\n    };\n  },\n  methods: {\n    loadChat() {\n      const chatId = this.$route.params.chatId; // Haal de chat-ID op uit de URL\n      const allChats = JSON.parse(localStorage.getItem('chats')) || []; // Laad chats van localStorage of een andere opslag\n\n      // Zoek de chat met de bijbehorende ID\n      const chat = allChats.find(c => c.id == chatId);\n      if (chat) {\n        this.chat = chat;\n        this.chatMessages = chat.messages || []; // Laad de berichten binnen de chat\n      } else {\n        alert('Chat not found');\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.chatMessages.push(this.newMessage); // Voeg bericht toe aan de berichtenlijst\n        this.newMessage = \"\"; // Maak het inputveld leeg\n        // Update de berichtenlijst in de opgeslagen chats\n        const allChats = JSON.parse(localStorage.getItem('chats')) || [];\n        const chatIndex = allChats.findIndex(c => c.id == this.chat.id);\n        if (chatIndex !== -1) {\n          allChats[chatIndex].messages = this.chatMessages;\n          localStorage.setItem('chats', JSON.stringify(allChats)); // Update localStorage\n        }\n      }\n    }\n  },\n  mounted() {\n    this.loadChat(); // Laad de chat wanneer de component wordt gemount\n  }\n};\n</script>\n\n<style scoped>\n.chat-view-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.chat-messages {\n  height: 300px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  padding: 10px;\n  background-color: white;\n}\n\n.message {\n  padding: 5px;\n  border-bottom: 1px solid #ddd;\n}\n\n.new-message {\n  display: flex;\n  justify-content: space-between;\n}\n\ninput {\n  flex: 1;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EAIzBA,KAAK,EAAC;AAAe;;EAMrBA,KAAK,EAAC;AAAa;;uBAV1BC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,uCAA0C,EAC1CC,mBAAA,CAA8B,YAA1B,QAAM,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,CAACC,IAAI,kBAEtBJ,mBAAA,CAIM,OAJNK,UAIM,I,kBAHJR,mBAAA,CAEMS,SAAA,QARZC,WAAA,CAMsCL,KAAA,CAAAM,YAAY,EANlD,CAMmBC,OAAO,EAAEC,KAAK;yBAA3Bb,mBAAA,CAEM;MAFyCc,GAAG,EAAED,KAAK;MAAEd,KAAK,EAAC;wBAC5Da,OAAO;oCAIdT,mBAAA,CAGM,OAHNY,UAGM,G,gBAFJZ,mBAAA,CAAiE;IAZvE,uBAAAa,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYsBZ,KAAA,CAAAa,UAAU,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAxBd,KAAA,CAAAa,UAAU,E,GAC1Bf,mBAAA,CAA0C;IAAjCiB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}