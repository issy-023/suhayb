{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RegistrationComponent\",\n  data() {\n    return {\n      name: \"\",\n      surname: \"\",\n      dob: \"\",\n      gender: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phone: \"\",\n      terms: false,\n      emails: false,\n      showPassword: false,\n      errorMessage: \"\"\n    };\n  },\n  computed: {\n    passwordValidations() {\n      const password = this.password;\n      const username = this.username;\n      return {\n        length: password.length >= 8,\n        uppercase: /[A-Z]/.test(password),\n        special: /[!@#$%^&*/,.?\":{}|<>]/.test(password),\n        noUsername: !password.toLowerCase().includes(username.toLowerCase())\n      };\n    },\n    isPasswordValid() {\n      return this.passwordValidations.length && this.passwordValidations.uppercase && this.passwordValidations.special && this.passwordValidations.noUsername && this.password === this.confirmPassword;\n    },\n    canRegister() {\n      // You can only register if all fields are valid and terms are accepted\n      return this.terms && this.isPasswordValid && this.name && this.surname && this.dob && this.gender && this.email && this.username && this.password && this.confirmPassword;\n    }\n  },\n  methods: {\n    async register() {\n      if (!this.terms) {\n        this.errorMessage = \"You must agree with the terms of service.\";\n      } else if (!this.isPasswordValid) {\n        this.errorMessage = \"Password does not meet all the requirements.\";\n      } else {\n        this.errorMessage = \"\";\n        try {\n          const requestBody = {\n            username: this.username,\n            password: this.password,\n            name: this.name,\n            surname: this.surname,\n            dob: this.dob,\n            gender: this.gender,\n            email: this.email,\n            phone: this.phone\n          };\n          console.log(\"Request body:\", requestBody);\n          const response = await fetch('http://localhost:8084/api/v1/User/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n          if (!response.ok) {\n            throw new Error('Failed to register');\n          }\n          const result = await response.json();\n          console.log('User registered:', result);\n          this.$router.push('/login');\n        } catch (error) {\n          console.error('Error during registration:', error);\n          this.errorMessage = 'Failed to register';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","surname","dob","gender","email","username","password","confirmPassword","phone","terms","emails","showPassword","errorMessage","computed","passwordValidations","length","uppercase","test","special","noUsername","toLowerCase","includes","isPasswordValid","canRegister","methods","register","requestBody","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","$router","push","error"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/RegistrationComponent.vue"],"sourcesContent":["<template>\n  <div class=\"page-container\">\n    <div class=\"registration-form\">\n      <h1>Register</h1>\n      <form @submit.prevent=\"register\">\n        <div class=\"form-row\">\n          <div class=\"form-group half-width\">\n            <label for=\"name\">Name:</label>\n            <input\n                type=\"text\"\n                id=\"name\"\n                v-model=\"name\"\n                placeholder=\"Fill in Name\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group half-width\">\n            <label for=\"surname\">Surname:</label>\n            <input\n                type=\"text\"\n                id=\"surname\"\n                v-model=\"surname\"\n                placeholder=\"Fill in Surname\"\n                required\n            />\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group half-width\">\n            <label for=\"dob\">Date of Birth:</label>\n            <input\n                type=\"date\"\n                id=\"dob\"\n                v-model=\"dob\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group half-width\">\n            <label for=\"gender\">Gender:</label>\n            <select id=\"gender\" v-model=\"gender\" required>\n              <option value=\"\" disabled selected>Choose Gender</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Something else\">Something else</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"phone\">Phone Number:</label>\n          <input\n              type=\"tel\"\n              id=\"phone\"\n              v-model=\"phone\"\n              placeholder=\"Fill in Phone Number\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"email\">E-mail:</label>\n          <input\n              type=\"email\"\n              id=\"email\"\n              v-model=\"email\"\n              placeholder=\"Fill in E-mail\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"username\">Username:</label>\n          <input\n              type=\"text\"\n              id=\"username\"\n              v-model=\"username\"\n              placeholder=\"Fill in Username\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"password\">Password:</label>\n          <input\n              :type=\"showPassword ? 'text' : 'password'\"\n              id=\"password\"\n              v-model=\"password\"\n              placeholder=\"Fill in Password\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"confirmPassword\">Repeat Password:</label>\n          <input\n              :type=\"showPassword ? 'text' : 'password'\"\n              id=\"confirmPassword\"\n              v-model=\"confirmPassword\"\n              placeholder=\"Repeat Password\"\n              required\n          />\n        </div>\n\n        <!-- Show Password Checkbox -->\n        <div class=\"form-group-inline\">\n          <input type=\"checkbox\" id=\"showPassword\" v-model=\"showPassword\" />\n          <label for=\"showPassword\">Show Password</label>\n        </div>\n\n        <!-- Password validation messages -->\n        <ul class=\"password-requirements\">\n          <li :class=\"{'valid': passwordValidations.length, 'invalid': !passwordValidations.length}\">\n            At least 8 characters\n          </li>\n          <li :class=\"{'valid': passwordValidations.uppercase, 'invalid': !passwordValidations.uppercase}\">\n            At least one uppercase letter\n          </li>\n          <li :class=\"{'valid': passwordValidations.special, 'invalid': !passwordValidations.special}\">\n            At least one special character\n          </li>\n          <li :class=\"{'valid': passwordValidations.noUsername, 'invalid': !passwordValidations.noUsername}\">\n            Must not contain username\n          </li>\n        </ul>\n\n        <div class=\"checkbox-group-left\">\n          <input type=\"checkbox\" id=\"terms\" v-model=\"terms\" required />\n          <label for=\"terms\">Agree with Terms of Service</label>\n        </div>\n\n        <div class=\"checkbox-group-left\">\n          <input type=\"checkbox\" id=\"emails\" v-model=\"emails\" />\n          <label for=\"emails\">Agree with us sending e-mails</label>\n        </div>\n\n        <button type=\"submit\" :disabled=\"!canRegister\">Register</button>\n      </form>\n\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RegistrationComponent\",\n  data() {\n    return {\n      name: \"\",\n      surname: \"\",\n      dob: \"\",\n      gender: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phone: \"\",\n      terms: false,\n      emails: false,\n      showPassword: false,\n      errorMessage: \"\"\n    };\n  },\n\n  computed: {\n    passwordValidations() {\n      const password = this.password;\n      const username = this.username;\n      return {\n        length: password.length >= 8,\n        uppercase: /[A-Z]/.test(password),\n        special: /[!@#$%^&*/,.?\":{}|<>]/.test(password),\n        noUsername: !password.toLowerCase().includes(username.toLowerCase())\n      };\n    },\n    isPasswordValid() {\n      return this.passwordValidations.length &&\n          this.passwordValidations.uppercase &&\n          this.passwordValidations.special &&\n          this.passwordValidations.noUsername &&\n          this.password === this.confirmPassword;\n    },\n    canRegister() {\n      // You can only register if all fields are valid and terms are accepted\n      return this.terms && this.isPasswordValid && this.name && this.surname && this.dob && this.gender && this.email && this.username && this.password && this.confirmPassword;\n    }\n  },\n  methods: {\n    async register() {\n      if (!this.terms) {\n        this.errorMessage = \"You must agree with the terms of service.\";\n      } else if (!this.isPasswordValid) {\n        this.errorMessage = \"Password does not meet all the requirements.\";\n      } else {\n        this.errorMessage = \"\";\n\n        try {\n          const requestBody = {\n            username: this.username,\n            password: this.password,\n            name: this.name,\n            surname: this.surname,\n            dob: this.dob,\n            gender: this.gender,\n            email: this.email,\n            phone: this.phone\n          };\n\n\n          console.log(\"Request body:\", requestBody);\n\n          const response = await fetch('http://localhost:8084/api/v1/User/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody),\n          });\n\n          if (!response.ok) {\n            throw new Error('Failed to register');\n          }\n\n          const result = await response.json();\n          console.log('User registered:', result);\n\n          this.$router.push('/login');\n\n        } catch (error) {\n          console.error('Error during registration:', error);\n          this.errorMessage = 'Failed to register';\n        }\n      }\n    }\n  }\n\n\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap');\n* {\n  font-family: 'Outfit', sans-serif;\n  font-optical-sizing: auto;\n  font-style: normal;\n}\n\n.page-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f3f3f3;\n}\n\n.registration-form {\n  width: 450px;\n  padding: 30px;\n  border: 2px solid #1a123b;\n  border-radius: 15px;\n  background-color: #fff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  color: #1a123b;\n  text-align: center;\n  margin-bottom: 20px;\n  font-weight: 400;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.half-width {\n  width: 48%;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.checkbox-group-left {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  justify-content: flex-start;\n}\n\n.checkbox-group-left input {\n  margin-right: 10px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.form-group-inline {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\ninput, select {\n  padding: 10px;\n  border: 2px solid #1a123b;\n  border-radius: 10px;\n  font-size: 16px;\n  color: #333;\n  margin-left: 5px;\n}\n\nbutton {\n  padding: 12px;\n  background-color: #ff9933;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n}\n\nbutton:hover {\n  background-color: #e68a00;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.password-requirements {\n  list-style-type: none;\n  padding: 0;\n  margin-top: 10px;\n  font-size: 12px;\n}\n\n.password-requirements li {\n  margin-bottom: 5px;\n}\n\n.password-requirements .valid {\n  color: green;\n}\n\n.password-requirements .invalid {\n  color: red;\n}\n\np {\n  color: red;\n  margin-top: 10px;\n  text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}