{"ast":null,"code":"// src/adapters/PartyAdapter.js\nimport axios from 'axios';\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport CDA from '../assets/party/cda.png';\nimport PvdA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/50plus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\nimport GLPVDA from '../assets/party/glpvda.png';\nimport CU from '../assets/party/cu.png';\nconst imageMap = {\n  VVD,\n  D66,\n  PVV,\n  CDA,\n  PvdA,\n  SP,\n  FVD,\n  Denk,\n  GroenLinks,\n  VijftigPlus,\n  BBB,\n  JA21,\n  NSC,\n  OPNL,\n  PvdD,\n  SGP,\n  Volt,\n  GLPVDA,\n  CU\n};\nclass PartyAdapter {\n  constructor(baseURL) {\n    this.api = axios.create({\n      baseURL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  async getParties() {\n    try {\n      const response = await this.api.get('/parties');\n      return this.matchImageToParty(response.data);\n    } catch (error) {\n      console.error('Error fetching parties:', error);\n      throw new Error('Failed to fetch party data');\n    }\n  }\n  matchImageToParty(rawData) {\n    return rawData.map(party => ({\n      ...party,\n      image: imageMap[party.abbreviation] || null\n    }));\n  }\n}\nexport default PartyAdapter;","map":{"version":3,"names":["axios","VVD","D66","PVV","CDA","PvdA","SP","FVD","Denk","GroenLinks","VijftigPlus","BBB","JA21","NSC","OPNL","PvdD","SGP","Volt","GLPVDA","CU","imageMap","PartyAdapter","constructor","baseURL","api","create","headers","getParties","response","get","matchImageToParty","data","error","console","Error","rawData","map","party","image","abbreviation"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/adapters/PartyAdapter.js"],"sourcesContent":["// src/adapters/PartyAdapter.js\nimport axios from 'axios';\n\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport CDA from '../assets/party/cda.png';\nimport PvdA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/50plus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\nimport GLPVDA from '../assets/party/glpvda.png'\nimport CU from '../assets/party/cu.png';\nconst imageMap = {\n    VVD,\n    D66,\n    PVV,\n    CDA,\n    PvdA,\n    SP,\n    FVD,\n    Denk,\n    GroenLinks,\n    VijftigPlus,\n    BBB,\n    JA21,\n    NSC,\n    OPNL,\n    PvdD,\n    SGP,\n    Volt,\n    GLPVDA,\n    CU\n};\n\nclass PartyAdapter {\n    constructor(baseURL) {\n        this.api = axios.create({\n            baseURL,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n\n    async getParties() {\n        try {\n            const response = await this.api.get('/parties');\n            return this.matchImageToParty(response.data)\n\n        } catch (error) {\n            console.error('Error fetching parties:', error);\n            throw new Error('Failed to fetch party data');\n        }\n    }\n\n    matchImageToParty(rawData){\n        return rawData.map(party => ({\n            ...party,\n            image: imageMap[party.abbreviation] || null,\n        }));\n    }\n}\n\nexport default PartyAdapter;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,EAAE,MAAM,wBAAwB;AACvC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,EAAE,MAAM,wBAAwB;AACvC,MAAMC,QAAQ,GAAG;EACbnB,GAAG;EACHC,GAAG;EACHC,GAAG;EACHC,GAAG;EACHC,IAAI;EACJC,EAAE;EACFC,GAAG;EACHC,IAAI;EACJC,UAAU;EACVC,WAAW;EACXC,GAAG;EACHC,IAAI;EACJC,GAAG;EACHC,IAAI;EACJC,IAAI;EACJC,GAAG;EACHC,IAAI;EACJC,MAAM;EACNC;AACJ,CAAC;AAED,MAAME,YAAY,CAAC;EACfC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,GAAG,GAAGxB,KAAK,CAACyB,MAAM,CAAC;MACpBF,OAAO;MACPG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;EACN;EAEA,MAAMC,UAAUA,CAAA,EAAG;IACf,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACJ,GAAG,CAACK,GAAG,CAAC,UAAU,CAAC;MAC/C,OAAO,IAAI,CAACC,iBAAiB,CAACF,QAAQ,CAACG,IAAI,CAAC;IAEhD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;IACjD;EACJ;EAEAJ,iBAAiBA,CAACK,OAAO,EAAC;IACtB,OAAOA,OAAO,CAACC,GAAG,CAACC,KAAK,KAAK;MACzB,GAAGA,KAAK;MACRC,KAAK,EAAElB,QAAQ,CAACiB,KAAK,CAACE,YAAY,CAAC,IAAI;IAC3C,CAAC,CAAC,CAAC;EACP;AACJ;AAEA,eAAelB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}