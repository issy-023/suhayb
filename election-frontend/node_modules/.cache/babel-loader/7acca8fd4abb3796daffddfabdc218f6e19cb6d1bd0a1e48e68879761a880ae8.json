{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-container\"\n};\nconst _hoisted_2 = {\n  class: \"game-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"intro-section\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"priorities-section\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = {\n  key: 2,\n  class: \"simulation-section\"\n};\nconst _hoisted_7 = {\n  class: \"story-options\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 3,\n  class: \"ending-section\"\n};\nconst _hoisted_10 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Cinematic Opening \"), $setup.gameStage === 'intro' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, \"What if \" + _toDisplayString($setup.selectedPartyName) + \" comes to power?\", 1 /* TEXT */), _createElementVNode(\"p\", null, \" The year is 2030. \" + _toDisplayString($setup.selectedPartyName) + \" has taken complete control and starts transforming the Netherlands. What will the country look like? You decide the course we take. \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.proceedToStage('priorities'))\n  }, \"Start the Simulation\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Theme Priorities \"), $setup.gameStage === 'priorities' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Set Your Priorities\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \" Drag the sliders to indicate how important each theme is to you. These choices will directly impact your simulation. \", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.themes, theme => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: theme.id,\n      class: \"theme-priority\"\n    }, [_createElementVNode(\"label\", null, _toDisplayString(theme.name), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      type: \"range\",\n      \"onUpdate:modelValue\": $event => theme.priority = $event,\n      min: \"1\",\n      max: \"10\",\n      step: \"1\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, theme.priority]]), _createElementVNode(\"span\", null, _toDisplayString(theme.priority), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.proceedToStage('simulation'))\n  }, \"Start Simulation\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Simulation Story \"), $setup.gameStage === 'simulation' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"h2\", null, _toDisplayString($setup.story.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.story.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.story.choices, choice => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: choice.id,\n      onClick: $event => $setup.makeChoice(choice)\n    }, _toDisplayString(choice.text), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Ending Results \"), $setup.gameStage === 'ending' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"h1\", null, \"Final Outcome: \" + _toDisplayString($setup.ending.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.ending.description), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $setup.ending.image,\n    alt: \"Ending visualization\"\n  }, null, 8 /* PROPS */, _hoisted_10)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$setup","gameStage","_hoisted_3","_toDisplayString","selectedPartyName","onClick","_cache","$event","proceedToStage","_hoisted_4","_Fragment","_renderList","themes","theme","id","name","type","priority","min","max","step","_hoisted_5","_hoisted_6","story","title","content","_hoisted_7","choices","choice","makeChoice","text","_hoisted_8","_hoisted_9","ending","description","src","image","alt","_hoisted_10"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/WatAls.vue"],"sourcesContent":["<template>\n  <div class=\"page-container\">\n    <div class=\"game-container\">\n      <!-- Cinematic Opening -->\n      <div v-if=\"gameStage === 'intro'\" class=\"intro-section\">\n        <h1>What if {{ selectedPartyName }} comes to power?</h1>\n        <p>\n          The year is 2030. {{ selectedPartyName }} has taken complete control and\n          starts transforming the Netherlands. What will the country look like?\n          You decide the course we take.\n        </p>\n        <button @click=\"proceedToStage('priorities')\">Start the Simulation</button>\n      </div>\n\n      <!-- Theme Priorities -->\n      <div v-if=\"gameStage === 'priorities'\" class=\"priorities-section\">\n        <h2>Set Your Priorities</h2>\n        <p>\n          Drag the sliders to indicate how important each theme is to you. These\n          choices will directly impact your simulation.\n        </p>\n        <div v-for=\"theme in themes\" :key=\"theme.id\" class=\"theme-priority\">\n          <label>{{ theme.name }}</label>\n          <input\n              type=\"range\"\n              v-model=\"theme.priority\"\n              min=\"1\"\n              max=\"10\"\n              step=\"1\"\n          />\n          <span>{{ theme.priority }}</span>\n        </div>\n        <button @click=\"proceedToStage('simulation')\">Start Simulation</button>\n      </div>\n\n      <!-- Simulation Story -->\n      <div v-if=\"gameStage === 'simulation'\" class=\"simulation-section\">\n        <h2>{{ story.title }}</h2>\n        <p>{{ story.content }}</p>\n\n        <div class=\"story-options\">\n          <button\n              v-for=\"choice in story.choices\"\n              :key=\"choice.id\"\n              @click=\"makeChoice(choice)\"\n          >\n            {{ choice.text }}\n          </button>\n        </div>\n      </div>\n\n      <!-- Ending Results -->\n      <div v-if=\"gameStage === 'ending'\" class=\"ending-section\">\n        <h1>Final Outcome: {{ ending.title }}</h1>\n        <p>{{ ending.description }}</p>\n        <img :src=\"ending.image\" alt=\"Ending visualization\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from \"vue\";\n\nexport default {\n  name: \"PoliticalSimulationGame\",\n  setup() {\n    // Initial Data\n    const selectedParty = ref(\"groenlinks\"); // Example starting party\n    const gameStage = ref(\"intro\"); // Stages: intro -> priorities -> simulation -> ending\n    const themes = ref([\n      { id: \"climate\", name: \"Climate & Environment\", priority: 5 },\n      { id: \"economy\", name: \"Economy\", priority: 5 },\n      { id: \"education\", name: \"Education\", priority: 5 },\n      { id: \"healthcare\", name: \"Healthcare\", priority: 5 },\n    ]);\n\n    // Story Elements\n    const stories = ref({\n      groenlinks: [\n        {\n          id: 1,\n          title: \"The Green Offensive\",\n          content:\n              \"GroenLinks' policies have drastically changed the Netherlands: thousands of new wind turbines dot the landscape, a meat tax has been introduced, and there are massive investments in public transport.\",\n          choices: [\n            {\n              id: \"support_policy\",\n              text: \"Support the policies and enforce stricter regulations.\",\n            },\n            {\n              id: \"balance_policy\",\n              text: \"Seek a compromise with other parties.\",\n            },\n            {\n              id: \"reverse_policy\",\n              text: \"Grant farmers and businesses more freedom to adapt.\",\n            },\n          ],\n        },\n        {\n          id: 2,\n          title: \"Protests in The Hague\",\n          content:\n              \"Stricter environmental rules have led to unrest: farmers and businesses are staging mass protests in The Hague. Meanwhile, support for change is growing among youth.\",\n          choices: [\n            { id: \"crackdown\", text: \"Implement harsh measures against protests.\" },\n            { id: \"negotiation\", text: \"Negotiate with the demonstrators.\" },\n            { id: \"rollback\", text: \"Revoke certain measures.\" },\n          ],\n        },\n      ],\n    });\n\n    const endings = ref({\n      groenlinks: {\n        utopia: {\n          title: \"Green Utopia\",\n          description:\n              \"The Netherlands has become a green paradise with 100% sustainable energy and a happy population.\",\n          image: \"/images/green-utopia.png\",\n        },\n        dystopia: {\n          title: \"Chaos in the Netherlands\",\n          description:\n              \"Strict regulations have led to a social crisis with a declining economy and mass protests.\",\n          image: \"/images/dystopia.png\",\n        },\n      },\n    });\n\n    const currentStoryIndex = ref(0);\n\n    // Computed Values\n    const selectedPartyName = computed(() => {\n      const partyMap = {\n        groenlinks: \"GroenLinks\",\n        vvd: \"VVD\",\n        pvda: \"PvdA\",\n      };\n      return partyMap[selectedParty.value] || \"Unknown\";\n    });\n\n    const story = computed(() =>\n        stories.value[selectedParty.value][currentStoryIndex.value]\n    );\n\n    const ending = computed(() => {\n      const totalPriority = themes.value.reduce(\n          (sum, theme) => sum + theme.priority,\n          0\n      );\n      return totalPriority > 30\n          ? endings.value[selectedParty.value].utopia\n          : endings.value[selectedParty.value].dystopia;\n    });\n\n    // Functions\n    const proceedToStage = (stage) => {\n      gameStage.value = stage;\n    };\n\n    const makeChoice = () => {\n      if (currentStoryIndex.value < stories.value[selectedParty.value].length - 1) {\n        currentStoryIndex.value++;\n      } else {\n        proceedToStage(\"ending\");\n      }\n    };\n\n    return {\n      gameStage,\n      selectedPartyName,\n      themes,\n      proceedToStage,\n      story,\n      makeChoice,\n      ending,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Basic Styles */\n.page-container {\n  background-color: #f0f4f8;\n  padding: 40px;\n  border-radius: 12px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n}\n\n.game-container {\n  max-width: 800px;\n  margin: auto;\n  font-family: Arial, sans-serif;\n  padding: 50px;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.theme-priority {}\n\n.intro-section,\n.priorities-section,\n.simulation-section,\n.ending-section {\n  margin-bottom: 30px;\n}\n\nbutton {\n  align-content: center;\n  display: block;\n  margin: 20px 0;\n  padding: 20px 30px;\n  background-color: #FF9900;\n  color: #fff;\n  border: 5px solid;\n  border-color: #17003C;\n  border-radius: 80px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, border-color 0.3s ease;\n  font-size: 18px;\n}\n\nbutton:hover {\n  background-color: #17003C;\n  border-color: #FF9900;\n}\n\ninput[type=\"range\"] {\n  -webkit-appearance: none;\n  width: 300px;\n  height: 8px;\n  background: #FF9900;\n  border-radius: 5px;\n  outline: none;\n  transition: background 0.3s;\n}\n\ninput[type=\"range\"]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  width: 20px;\n  height: 20px;\n  background: #17003C;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n  width: 20px;\n  height: 20px;\n  background: #17003C;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n}\n\ninput[type=\"range\"]::-moz-range-track {\n  background: #FF9900;\n  height: 8px;\n  border-radius: 5px;\n}\n\ninput[type=\"range\"]::-ms-thumb {\n  width: 20px;\n  height: 20px;\n  background: #17003C;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\ninput[type=\"range\"]::-ms-track {\n  background: #FF9900;\n  height: 8px;\n  border: none;\n  color: transparent;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}