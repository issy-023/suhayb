{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport PVDA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport CDA from '../assets/party/cda.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/VijftigPlus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\nimport { API_URL } from '../config.js';\nimport jwtDecode from 'jwt-decode';\nexport default {\n  name: 'CommunitiesComponent',\n  data() {\n    return {\n      showLoginPrompt: false,\n      communities: [],\n      loading: true,\n      joinedCommunityId: null,\n      // Lokale state voor joined community\n      partyImages: {\n        'vvd': VVD,\n        'd66': D66,\n        'pvv': PVV,\n        'pvda': PVDA,\n        'sp': SP,\n        'fvd': FVD,\n        'cda': CDA,\n        'denk': Denk,\n        'groenLinks': GroenLinks,\n        '50plus': VijftigPlus,\n        'bbb': BBB,\n        'ja21': JA21,\n        'nsc': NSC,\n        'opnl': OPNL,\n        'pvdd': PvdD,\n        'sgp': SGP,\n        'volt': Volt\n      }\n    };\n  },\n  created() {\n    if (this.joinedCommunityId) {\n      this.$router.push({\n        name: \"CommunityChat\",\n        params: {\n          communityId: this.joinedCommunityId\n        }\n      });\n    } else {\n      this.fetchCommunities();\n    }\n  },\n  methods: {\n    fetchCommunities() {\n      fetch(`${API_URL}/api/communities`).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch communities');\n        }\n        return response.json();\n      }).then(data => {\n        this.communities = data;\n        this.loading = false;\n      }).catch(error => {\n        console.error('Error fetching communities:', error);\n        this.loading = false;\n      });\n    },\n    getCommunityImage(communityName) {\n      const formattedName = communityName.toLowerCase();\n      return this.partyImages[formattedName] || '';\n    },\n    attemptJoinCommunity(communityId) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        if (this.joinedCommunityId) {\n          alert('You can only join one community chat.');\n        } else {\n          this.showGuidelines(communityId);\n        }\n      } else {\n        this.showLoginPrompt = true;\n      }\n    },\n    showGuidelines(communityId) {\n      if (confirm('Please review the guidelines before joining:\\n\\n1. Be respectful.\\n2. No spamming.\\n3. Follow the community rules.\\n\\nDo you agree to these guidelines?')) {\n        this.joinCommunityAction(communityId);\n      } else {\n        alert('You must agree to the guidelines to join.');\n      }\n    },\n    async joinCommunityAction(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n        return;\n      }\n      let userId;\n      try {\n        const decodedToken = jwtDecode(token);\n        userId = decodedToken.id;\n        if (!userId) throw new Error('Invalid token: userId not found');\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        this.showLoginPrompt = true;\n        return;\n      }\n      try {\n        const response = await fetch(`${API_URL}/api/communities/${communityId}/join?userId=${userId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to join community chat. Status: ${response.status}`);\n        }\n        this.joinedCommunityId = communityId; // Update lokale state\n\n        this.$router.push({\n          name: 'CommunityChat',\n          params: {\n            communityId\n          }\n        });\n      } catch (error) {\n        console.error('Error joining community chat:', error);\n        alert('An error occurred while trying to join the community. Please try again later.');\n      }\n    },\n    redirectToLogin() {\n      this.showLoginPrompt = false;\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["VVD","D66","PVV","PVDA","SP","FVD","CDA","Denk","GroenLinks","VijftigPlus","BBB","JA21","NSC","OPNL","PvdD","SGP","Volt","API_URL","jwtDecode","name","data","showLoginPrompt","communities","loading","joinedCommunityId","partyImages","created","$router","push","params","communityId","fetchCommunities","methods","fetch","then","response","ok","Error","json","catch","error","console","getCommunityImage","communityName","formattedName","toLowerCase","attemptJoinCommunity","token","localStorage","getItem","alert","showGuidelines","confirm","joinCommunityAction","userId","decodedToken","id","method","headers","Authorization","status","redirectToLogin"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/CommunitiesComponent.vue"],"sourcesContent":["<template>\n  <div class=\"community-list\">\n    <h2>Communities:</h2>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-if=\"!loading\">\n      <div v-for=\"community in communities\" :key=\"community.id\" class=\"community-card\">\n        <img class=\"image\" :src=\"getCommunityImage(community.name)\" :alt=\"community.name\" />\n        <div class=\"community-info\">\n          <h3>{{ community.name }}</h3>\n          <p>{{ community.description }}</p>\n          <div class=\"community-footer\">\n            <span>{{ community.members }} Members</span>\n            <button class=\"join-button\" @click=\"attemptJoinCommunity(community.id)\">JOIN</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"showLoginPrompt\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <p>Please log in to join a community.</p>\n        <button @click=\"redirectToLogin\" class=\"close-button\">Log In</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VVD from '../assets/party/vvd.png';\nimport D66 from '../assets/party/d66.png';\nimport PVV from '../assets/party/pvv.png';\nimport PVDA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\nimport FVD from '../assets/party/fvd.png';\nimport CDA from '../assets/party/cda.png';\nimport Denk from '../assets/party/denk.png';\nimport GroenLinks from '../assets/party/groenLinks.png';\nimport VijftigPlus from '../assets/party/VijftigPlus.png';\nimport BBB from '../assets/party/bbb.png';\nimport JA21 from '../assets/party/ja21.png';\nimport NSC from '../assets/party/nsc.png';\nimport OPNL from '../assets/party/opnl.png';\nimport PvdD from '../assets/party/pvdd.png';\nimport SGP from '../assets/party/sgp.png';\nimport Volt from '../assets/party/volt.png';\nimport { API_URL } from '../config.js';\nimport jwtDecode from 'jwt-decode';\n\nexport default {\n  name: 'CommunitiesComponent',\n\n  data() {\n    return {\n      showLoginPrompt: false,\n      communities: [],\n      loading: true,\n      joinedCommunityId: null, // Lokale state voor joined community\n      partyImages: {\n        'vvd': VVD,\n        'd66': D66,\n        'pvv': PVV,\n        'pvda': PVDA,\n        'sp': SP,\n        'fvd': FVD,\n        'cda': CDA,\n        'denk': Denk,\n        'groenLinks': GroenLinks,\n        '50plus': VijftigPlus,\n        'bbb': BBB,\n        'ja21': JA21,\n        'nsc': NSC,\n        'opnl': OPNL,\n        'pvdd': PvdD,\n        'sgp': SGP,\n        'volt': Volt,\n      },\n    };\n  },\n\n  created() {\n    if (this.joinedCommunityId) {\n      this.$router.push({ name: \"CommunityChat\", params: { communityId: this.joinedCommunityId } });\n    } else {\n      this.fetchCommunities();\n    }\n  },\n\n  methods: {\n    fetchCommunities() {\n      fetch(`${API_URL}/api/communities`)\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error('Failed to fetch communities');\n            }\n            return response.json();\n          })\n          .then((data) => {\n            this.communities = data;\n            this.loading = false;\n          })\n          .catch((error) => {\n            console.error('Error fetching communities:', error);\n            this.loading = false;\n          });\n    },\n\n    getCommunityImage(communityName) {\n      const formattedName = communityName.toLowerCase();\n      return this.partyImages[formattedName] || '';\n    },\n\n    attemptJoinCommunity(communityId) {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        if (this.joinedCommunityId) {\n          alert('You can only join one community chat.');\n        } else {\n          this.showGuidelines(communityId);\n        }\n      } else {\n        this.showLoginPrompt = true;\n      }\n    },\n\n    showGuidelines(communityId) {\n      if (confirm('Please review the guidelines before joining:\\n\\n1. Be respectful.\\n2. No spamming.\\n3. Follow the community rules.\\n\\nDo you agree to these guidelines?')) {\n        this.joinCommunityAction(communityId);\n      } else {\n        alert('You must agree to the guidelines to join.');\n      }\n    },\n\n\n    async joinCommunityAction(communityId) {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.showLoginPrompt = true;\n        return;\n      }\n\n      let userId;\n      try {\n        const decodedToken = jwtDecode(token);\n        userId = decodedToken.id;\n        if (!userId) throw new Error('Invalid token: userId not found');\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        this.showLoginPrompt = true;\n        return;\n      }\n\n      try {\n        const response = await fetch(`${API_URL}/api/communities/${communityId}/join?userId=${userId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to join community chat. Status: ${response.status}`);\n        }\n\n        this.joinedCommunityId = communityId; // Update lokale state\n\n        this.$router.push({ name: 'CommunityChat', params: { communityId } });\n      } catch (error) {\n        console.error('Error joining community chat:', error);\n        alert('An error occurred while trying to join the community. Please try again later.');\n      }\n    },\n\n    redirectToLogin() {\n      this.showLoginPrompt = false;\n      this.$router.push({ name: 'Login' });\n    },\n  },\n};\n</script>\n\n\n\n\n<style scoped>\nhtml, body {\n  overflow-y: auto;\n  height: 100%;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 10px;\n  width: 500px;\n  max-width: 90%;\n  position: relative;\n}\n\n.chat-messages {\n  background-color: #f1f1f1;\n  padding: 1rem;\n  height: 300px;\n  overflow-y: auto;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n}\n\n.chat-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.profile-container {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.message-content {\n  background-color: #e9ecef;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 75%;\n}\n\n.comments {\n  margin-top: 10px;\n}\n\n.comment {\n  margin-left: 50px;\n  margin-top: 5px;\n}\n\ninput[type='text'] {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\n.close-button {\n  background-color: #ff5f5f;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.close-button:hover {\n  background-color: #ff1f1f;\n}\n\n.navbar {\n  background-color: #17003C;\n  padding: 1.5rem 0;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  z-index: 100;\n  border-bottom-left-radius: 100px;\n  border-bottom-right-radius: 100px;\n}\n\n.navbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 2rem;\n  font-size: 32px;\n}\n\n.navbar-logo {\n  width: 70px;\n  height: 70px;\n  padding-left: 2%;\n}\n\n.navbar ul {\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-end;\n  margin: 0;\n  padding-right: 5%;\n  flex: 1;\n  text-align: center;\n  overflow-y: auto;\n}\n\n.navbar ul li {\n  margin: 0 0.5rem;\n  overflow-y: auto;\n}\n\n.navbar ul li a {\n  color: white;\n  text-decoration: none;\n  font-size: 24px;\n  padding: 0.5rem 1rem;\n  display: block;\n  transition: color 0.3s ease;\n  cursor: pointer;\n  overflow-y: auto;\n}\n\n.navbar ul li a:hover {\n  color: #FF9900;\n}\n\n.community-list {\n  padding: 2rem;\n  background-color: #f8f8f8;\n  margin-top: 0px;\n  overflow-y: auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 1rem;\n  color: #17003C;\n}\n\n.community-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #17003C;\n  padding: 2rem;\n  border-radius: 20px;\n  margin-bottom: 1rem;\n  color: white;\n  width: 90%;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.image {\n  height: 15vh;\n  object-fit: contain;\n}\n\n.community-info {\n  flex: 1;\n  margin-left: 1rem;\n}\n\n.community-info h3 {\n  font-size: 20px;\n  margin: 0;\n}\n\n.community-info p {\n  background-color: white;\n  color: #17003C;\n  padding: 3rem;\n  border-radius: 10px;\n  margin: 0.5rem 0;\n}\n\n.community-footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.join-button {\n  background-color: #FF9900;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 50px;\n  color: white;\n  cursor: pointer;\n}\n\n.join-button:hover {\n  background-color: white;\n  color: #FF9900;\n  border: 1px solid #FF9900;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}