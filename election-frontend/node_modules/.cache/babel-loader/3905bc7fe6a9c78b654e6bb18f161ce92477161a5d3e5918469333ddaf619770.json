{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-list\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"community-info\"\n};\nconst _hoisted_4 = {\n  class: \"community-footer\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"message-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Communities:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.parties, party => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: party.id,\n      class: \"community-card\"\n    }, [_createElementVNode(\"img\", {\n      class: \"image\",\n      src: party.image,\n      alt: party.name\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString(party.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(party.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString(party.members) + \"K Members\", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"join-button\",\n      onClick: $event => $options.joinCommunity(party.id)\n    }, \"JOIN\", 8 /* PROPS */, _hoisted_5)])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.activeChatId !== null ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.closeChat && $options.closeChat(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"h3\", null, \"Chat with \" + _toDisplayString($options.getPartyName($data.activeChatId)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatMessages[$data.activeChatId], (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-message\"\n    }, [_createElementVNode(\"img\", {\n      src: $options.getUserProfile(message.userId).profilePic,\n      class: \"profile-pic\",\n      alt: \"Profile Picture\"\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"strong\", null, _toDisplayString($options.getUserProfile(message.userId).name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(message.text), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    placeholder: \"Type a message\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeChat && $options.closeChat(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_renderList","$data","parties","party","key","id","src","image","alt","name","_hoisted_2","_hoisted_3","_toDisplayString","description","_hoisted_4","members","onClick","$event","$options","joinCommunity","_hoisted_5","activeChatId","_cache","args","closeChat","_withModifiers","getPartyName","_hoisted_6","chatMessages","message","index","getUserProfile","userId","profilePic","_hoisted_7","_hoisted_8","text","type","newMessage","placeholder","onKeyup","_withKeys","sendMessage","_createCommentVNode"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/CommunitiesComponent.vue"],"sourcesContent":["<template>\n\n  <div class=\"community-list\">\n    <h2>Communities:</h2>\n    <div v-for=\"party in parties\" :key=\"party.id\" class=\"community-card\">\n      <img class=\"image\" :src=\"party.image\" :alt=\"party.name\" />\n      <div class=\"community-info\">\n        <h3>{{ party.name }}</h3>\n        <p>{{ party.description }}</p>\n        <div class=\"community-footer\">\n          <span>{{ party.members }}K Members</span>\n          <button class=\"join-button\" @click=\"joinCommunity(party.id)\">JOIN</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div v-if=\"activeChatId !== null\" class=\"modal-overlay\" @click=\"closeChat\">\n    <div class=\"modal-content\" @click.stop>\n      <h3>Chat with {{ getPartyName(activeChatId) }}</h3>\n      <div class=\"chat-messages\">\n        <div v-for=\"(message, index) in chatMessages[activeChatId]\" :key=\"index\" class=\"chat-message\">\n          <img :src=\"getUserProfile(message.userId).profilePic\" class=\"profile-pic\" alt=\"Profile Picture\" />\n          <div class=\"message-content\">\n            <strong>{{ getUserProfile(message.userId).name }}</strong>\n            <p>{{ message.text }}</p>\n          </div>\n        </div>\n      </div>\n      <input type=\"text\" v-model=\"newMessage\" placeholder=\"Type a message\" @keyup.enter=\"sendMessage\" />\n      <button class=\"close-button\" @click=\"closeChat\">Close</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PVV from '../assets/party/pvv.png';\nimport PVDA from '../assets/party/pvda.png';\nimport SP from '../assets/party/sp.png';\n\n\n\nexport default {\n  name: 'CommunitiesComponent',\n  data() {\n    return {\n      users: [\n        { id: 1, name: 'John Doe', profilePic:PVDA  },\n        { id: 2, name: 'Jane Smith', profilePic:PVV },\n      ],\n      parties: [\n        {\n          id: 1,\n          name: 'thepvdacommunity',\n          description: 'TALKS ABOUT PVDA AND HOW THEY COULD GET BETTER!',\n          members: 3,\n          image: PVDA,\n        },\n        {\n          id: 2,\n          name: 'GeertForPresident',\n          description: 'ALL THE TALKS ABOUT THE PERFECT PLANS OF PVV',\n          members: 10,\n          image: PVV,\n        },\n        {\n          id: 3,\n          name: 'BOERENOPNUMMER1',\n          description: \"LET'S MAKE THE FARMERS PART OF THE ELECTIONS WITH BBB\",\n          members: 2,\n          image: SP,\n        },\n      ],\n      activeChatId: null,\n      chatMessages: {\n        1: [\n          { userId: 1, text: 'Hello from PVDA!' },\n          { userId: 2, text: 'What do you think about the new policies?' },\n        ],\n        2: [\n          { text: \"Let's discuss PVV's plans!\" },\n          { text: 'I have some concerns about that.' },\n        ],\n        3: [{ text: \"What's happening with BBB?\" }],\n      },\n      newMessage: '',\n\n    };\n  },\n  methods: {\n    joinCommunity(partyId) {\n      this.activeChatId = partyId;\n    },\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        this.chatMessages[this.activeChatId].push({\n          userId: this.currentUserId, // Add the message as the current user\n          text: this.newMessage,\n        });\n        this.newMessage = ''; // Clear the input field\n      }\n    },\n    closeChat() {\n      this.activeChatId = null;\n    },\n    getPartyName(partyId) {\n      const party = this.parties.find((party) => party.id === partyId);\n      return party ? party.name : 'Unknown Party';\n    },\n    getUserProfile(userId) {\n      return this.users.find((user) => user.id === userId) || { name: 'Unknown', profilePic: '' };\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 10px;\n  width: 500px;\n  max-width: 90%;\n  position: relative;\n}\n\n.chat-messages {\n  background-color: #f1f1f1;\n  padding: 1rem;\n  height: 300px;\n  overflow-y: auto;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n}\n\n.chat-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.profile-pic {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.message-content {\n  background-color: #e9ecef;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 75%;\n}\n\ninput[type='text'] {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\n.close-button {\n  background-color: #ff5f5f;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.close-button:hover {\n  background-color: #ff1f1f;\n}.navbar {\n   background-color: #17003C;\n   padding: 1.5rem 0;\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   z-index: 100;\n   border-bottom-left-radius: 100px;\n   border-bottom-right-radius: 100px;\n }\n\n.navbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 2rem;\n  font-size: 32px;\n}\n\n.navbar-logo {\n  width: 70px;\n  height: 70px;\n  padding-left: 2%;\n}\n\n.navbar ul {\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-end;\n  margin: 0;\n  padding-right: 5%;\n  flex: 1;\n  text-align: center;\n}\n\n.navbar ul li {\n  margin: 0 0.5rem;\n}\n\n.navbar ul li a {\n  color: white;\n  text-decoration: none;\n  font-size: 24px;\n  padding: 0.5rem 1rem;\n  display: block;\n  transition: color 0.3s ease;\n  cursor: pointer;\n}\n\n.navbar ul li a:hover {\n  color: #FF9900;\n}\n\n.community-list {\n  padding: 2rem;\n  background-color: #f8f8f8;\n  margin-top: 0px;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 1rem;\n  color: #17003C;\n}\n\n.community-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #17003C;\n  padding: 2rem;\n  border-radius: 20px;\n  margin-bottom: 1rem;\n  color: white;\n  width: 90%;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.image {\n  height: 15vh;\n  object-fit: contain;\n}\n\n.community-info {\n  flex: 1;\n  margin-left: 1rem;\n}\n\n.community-info h3 {\n  font-size: 20px;\n  margin: 0;\n}\n\n.community-info p {\n  background-color: white;\n  color: #17003C;\n  padding: 3rem;\n  border-radius: 10px;\n  margin: 0.5rem 0;\n}\n\n.community-footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.join-button {\n  background-color: #FF9900;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 50px;\n  color: white;\n  cursor: pointer;\n}\n\n.join-button:hover {\n  background-color: white;\n  color: #FF9900;\n  border: 1px solid #FF9900;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}