{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-chat\"\n};\nconst _hoisted_2 = {\n  class: \"message-box new-message-box\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  class: \"username\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"response-to\"\n};\nconst _hoisted_6 = {\n  class: \"message-actions\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"comments-section\"\n};\nconst _hoisted_12 = {\n  class: \"username\"\n};\nconst _hoisted_13 = [\"onUpdate:modelValue\"];\nconst _hoisted_14 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"chat-header\"\n  }, [_createElementVNode(\"h2\", null, \"Community Chat App\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"user-info\"\n  }, [_createElementVNode(\"span\", {\n    class: \"user-avatar\"\n  })], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    placeholder: \"type message here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    class: \"post-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.postMessage && _ctx.postMessage(...args))\n  }, \"Post\")]), _createCommentVNode(\" Display Messages \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message-box\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      class: \"user-avatar\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(message.username), 1 /* TEXT */), message.responseTo ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"response to @\" + _toDisplayString(message.responseTo), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", null, _toDisplayString(message.text), 1 /* TEXT */), _createCommentVNode(\" Message Actions \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.openComments(message.id)\n    }, \"Comments\", 8 /* PROPS */, _hoisted_7), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.respondToMessage(message.id)\n    }, \"Respond\", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.likeMessage(message.id)\n    }, \"Like\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.shareMessage(message.id)\n    }, \"Share\", 8 /* PROPS */, _hoisted_10)]), _createCommentVNode(\" Comments Section \"), message.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(message.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: comment.id,\n        class: \"comment\"\n      }, [_createElementVNode(\"span\", _hoisted_12, \"@\" + _toDisplayString(comment.username), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.text), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => message.newComment = $event,\n      placeholder: \"Add a comment\"\n    }, null, 8 /* PROPS */, _hoisted_13), [[_vModelText, message.newComment]]), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.postComment(message.id)\n    }, \"Comment\", 8 /* PROPS */, _hoisted_14)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","newMessage","placeholder","onClick","args","_ctx","postMessage","_createCommentVNode","_Fragment","_renderList","chatMessages","message","id","_hoisted_3","_hoisted_4","_toDisplayString","username","responseTo","_hoisted_5","text","_hoisted_6","openComments","_hoisted_7","respondToMessage","_hoisted_8","likeMessage","_hoisted_9","shareMessage","_hoisted_10","showComments","_hoisted_11","comments","comment","_hoisted_12","newComment","_hoisted_13","postComment","_hoisted_14"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/CommunityChatPage.vue"],"sourcesContent":["<template>\n  <div class=\"community-chat\">\n    <div class=\"chat-header\">\n      <h2>Community Chat App</h2>\n    </div>\n    <div class=\"message-box new-message-box\">\n      <div class=\"user-info\">\n        <span class=\"user-avatar\"></span>\n\n      </div>\n      <textarea v-model=\"newMessage\" placeholder=\"type message here...\"></textarea>\n      <button class=\"post-button\" @click=\"postMessage\">Post</button>\n    </div>\n\n    <!-- Display Messages -->\n    <div v-for=\"message in chatMessages\" :key=\"message.id\" class=\"message-box\">\n      <div class=\"user-info\">\n        <span class=\"user-avatar\"></span>\n        <span class=\"username\">{{ message.username }}</span>\n        <span v-if=\"message.responseTo\" class=\"response-to\">response to @{{ message.responseTo }}</span>\n      </div>\n      <p>{{ message.text }}</p>\n\n      <!-- Message Actions -->\n      <div class=\"message-actions\">\n        <button @click=\"openComments(message.id)\">Comments</button>\n        <button @click=\"respondToMessage(message.id)\">Respond</button>\n        <button @click=\"likeMessage(message.id)\">Like</button>\n        <button @click=\"shareMessage(message.id)\">Share</button>\n      </div>\n\n      <!-- Comments Section -->\n      <div v-if=\"message.showComments\" class=\"comments-section\">\n        <div v-for=\"comment in message.comments\" :key=\"comment.id\" class=\"comment\">\n          <span class=\"username\">@{{ comment.username }}</span>\n          <p>{{ comment.text }}</p>\n        </div>\n        <textarea v-model=\"message.newComment\" placeholder=\"Add a comment\"></textarea>\n        <button @click=\"postComment(message.id)\">Comment</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'CommunityChatComponent',\n  props: ['communityId'],\n  data() {\n    return {\n      Users: [],          // Placeholder for user list to keep the UI layout\n      chatMessages: [],   // Placeholder for messages to keep the UI layout\n      newMessage: '',\n      selectedFile: null, // Store the selected image file here\n    };\n  },\n  computed: {\n    ...mapGetters(['userId']),\n  },\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0]; // Capture selected file\n    },\n\n    async sendMessage() {\n      if (!this.newMessage.trim()) return;\n\n      const formData = new FormData();\n      formData.append('content', this.newMessage);\n      if (this.selectedFile) {\n        formData.append('image', this.selectedFile); // Attach image if selected\n      }\n\n      try {\n        const response = await fetch(`/api/communities/${this.communityId}/posts/create`, {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) throw new Error('Failed to send message');\n\n        // Clear input fields after sending the message\n        this.newMessage = '';\n        this.selectedFile = null;\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n* {\n  font-family: \"Outfit\", sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\n\n.community-chat {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #F9F9F9;\n  color: #17003C;\n  width: 100vw;\n  height: 100vh;\n  padding: 1.5rem;\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  margin-bottom: 1rem;\n}\n\n.leave-button {\n  background-color: #FF9900;\n  color: white;\n  border: 7px solid #17003C;\n  padding: 0.5rem 1rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease, border-color 0.3s ease;\n  border-radius: 100px;\n}\n\n.leave-button:hover {\n  background-color: #17003C;\n  border-color: #FF9900;\n}\n\n.users-online {\n  background-color: #F1F1F1;\n  padding: 1rem;\n  border-radius: 12px;\n  margin-bottom: 1rem;\n  width: 100%;\n  max-width: 800px;\n}\n\n.users-online ul {\n  list-style: none;\n}\n\n.users-online li {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n}\n\n.user-avatar {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n}\n\n.chat-messages {\n  background-color: #F1F1F1;\n  padding: 1rem;\n  border-radius: 12px;\n  flex: 1;\n  width: 100%;\n  max-width: 800px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n}\n\n.chat-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.message-avatar {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 0.75rem;\n}\n\n.message-content {\n  background-color: #E0E0E0;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n}\n\n.own-message .message-content {\n  background-color: #D1EAFF;\n}\n\n.message-user {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.3rem;\n}\n\n.message-input {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  background-color: #F9F9F9;\n  position: sticky;\n  bottom: 0;\n}\n\n.message-input input {\n  flex: 1;\n  padding: 1rem;\n  border-radius: 50px;\n  border: 1px solid #ccc;\n  margin-right: 1rem;\n  font-size: 1.2rem;\n}\n\n.message-box {\n  background-color: #17003C;\n  color: white;\n  border-radius: 15px;\n  padding: 15px;\n  margin: 10px auto;\n  width: 90%;\n  max-width: 600px;\n}\n\n.new-message-box {\n  background-color: #17003C;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: gray;\n  margin-right: 10px;\n}\n\n.username {\n  font-weight: bold;\n  color: #FF9900;\n}\n\n.response-to {\n  font-size: 0.9em;\n  color: #FF9900;\n  margin-left: 5px;\n}\n\ntextarea {\n  width: 100%;\n  border-radius: 10px;\n  padding: 10px;\n  font-size: 1em;\n  margin: 10px 0;\n  border: none;\n}\n\n.post-button {\n  background-color: #FF9900;\n  color: white;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.post-button:hover {\n  background-color: #E68A00;\n}\n\n/* Message Actions */\n.message-actions {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n}\n\n.message-actions button {\n  background: none;\n  border: none;\n  color: #FF9900;\n  cursor: pointer;\n  font-size: 1em;\n}\n\n.message-actions button:hover {\n  color: #E68A00;\n}\n\n/* Comments Section */\n.comments-section {\n  margin-top: 10px;\n  padding: 10px;\n  background-color: #2A1E54;\n  border-radius: 10px;\n}\n\n.comment {\n  margin-bottom: 5px;\n}\n\n.comment .username {\n  font-weight: bold;\n  color: #FF9900;\n}\n\n.comment textarea {\n  margin-top: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}