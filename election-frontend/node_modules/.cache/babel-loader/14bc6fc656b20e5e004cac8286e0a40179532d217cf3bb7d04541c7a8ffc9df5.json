{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RegistrationComponent\",\n  data() {\n    return {\n      name: \"\",\n      surname: \"\",\n      dob: \"\",\n      gender: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      terms: false,\n      emails: false,\n      showPassword: false,\n      errorMessage: \"\",\n      showSuccessPopup: false // Nieuw: Beheert de popup zichtbaarheid\n    };\n  },\n  computed: {\n    passwordValidations() {\n      const password = this.password;\n      const username = this.username;\n      return {\n        length: password.length >= 8,\n        uppercase: /[A-Z]/.test(password),\n        special: /[!@#$%^&*/,.?\":{}|<>]/.test(password),\n        noUsername: !password.toLowerCase().includes(username.toLowerCase())\n      };\n    },\n    isPasswordValid() {\n      return this.passwordValidations.length && this.passwordValidations.uppercase && this.passwordValidations.special && this.passwordValidations.noUsername && this.password === this.confirmPassword;\n    },\n    canRegister() {\n      return this.terms && this.isPasswordValid && this.name && this.surname && this.dob && this.gender && this.email && this.username && this.password && this.confirmPassword;\n    }\n  },\n  methods: {\n    async register() {\n      if (!this.terms) {\n        this.errorMessage = \"You must agree with the terms of service.\";\n      } else if (!this.isPasswordValid) {\n        this.errorMessage = \"Password does not meet all the requirements.\";\n      } else {\n        this.errorMessage = \"\";\n        const userData = {\n          name: this.name,\n          surname: this.surname,\n          dateOfBirth: this.dob,\n          gender: this.gender,\n          email: this.email,\n          username: this.username,\n          password: this.password,\n          termsAccepted: this.terms,\n          emailsAccepted: this.emails\n        };\n        try {\n          const response = await fetch(\"http://localhost:8084/api/v1/User/register\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n          });\n          if (!response.ok) {\n            throw new Error(\"Failed to register user\");\n          }\n\n          // Toon popup bij succes\n          this.showSuccessPopup = true;\n        } catch (error) {\n          console.error(\"Error during registration:\", error);\n          this.errorMessage = \"Registration failed. Please try again later.\";\n        }\n      }\n    },\n    redirectToLogin() {\n      this.showSuccessPopup = false;\n      this.$router.push(\"/login\"); // Stuur door naar login pagina\n    }\n  }\n};","map":{"version":3,"names":["name","data","surname","dob","gender","email","username","password","confirmPassword","terms","emails","showPassword","errorMessage","showSuccessPopup","computed","passwordValidations","length","uppercase","test","special","noUsername","toLowerCase","includes","isPasswordValid","canRegister","methods","register","userData","dateOfBirth","termsAccepted","emailsAccepted","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","redirectToLogin","$router","push"],"sources":["/Users/suhayb/MijnProjecten/cuuruuvoovii16/election-frontend/src/components/RegistrationComponent.vue"],"sourcesContent":["<template>\n  <div class=\"page-container\">\n    <div class=\"registration-form\">\n      <h1>Register</h1>\n      <form @submit.prevent=\"register\">\n        <div class=\"form-row\">\n          <div class=\"form-group half-width\">\n            <label for=\"name\">Name:</label>\n            <input\n                type=\"text\"\n                id=\"name\"\n                v-model=\"name\"\n                placeholder=\"Fill in Name\"\n                required\n            />\n          </div>\n\n          <div class=\"form-group half-width\">\n            <label for=\"surname\">Surname:</label>\n            <input\n                type=\"text\"\n                id=\"surname\"\n                v-model=\"surname\"\n                placeholder=\"Fill in Surname\"\n                required\n            />\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group half-width\">\n            <label for=\"dob\">Date of Birth:</label>\n            <input type=\"date\" id=\"dob\" v-model=\"dob\" required />\n          </div>\n\n          <div class=\"form-group half-width\">\n            <label for=\"gender\">Gender:</label>\n            <select id=\"gender\" v-model=\"gender\" required>\n              <option value=\"\" disabled selected>Choose Gender</option>\n              <option value=\"MALE\">MALE</option>\n              <option value=\"FEMALE\">FEMALE</option>\n              <option value=\"OTHER\">OTHER</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"email\">E-mail:</label>\n          <input\n              type=\"email\"\n              id=\"email\"\n              v-model=\"email\"\n              placeholder=\"Fill in E-mail\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"username\">Username:</label>\n          <input\n              type=\"text\"\n              id=\"username\"\n              v-model=\"username\"\n              placeholder=\"Fill in Username\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"password\">Password:</label>\n          <input\n              :type=\"showPassword ? 'text' : 'password'\"\n              id=\"password\"\n              v-model=\"password\"\n              placeholder=\"Fill in Password\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group full-width\">\n          <label for=\"confirmPassword\">Repeat Password:</label>\n          <input\n              :type=\"showPassword ? 'text' : 'password'\"\n              id=\"confirmPassword\"\n              v-model=\"confirmPassword\"\n              placeholder=\"Repeat Password\"\n              required\n          />\n        </div>\n\n        <div class=\"form-group-inline\">\n          <input type=\"checkbox\" id=\"showPassword\" v-model=\"showPassword\" />\n          <label for=\"showPassword\">Show Password</label>\n        </div>\n\n        <div class=\"password-requirements\">\n          <li :class=\"{ valid: passwordValidations.length, invalid: !passwordValidations.length }\">\n            At least 8 characters\n          </li>\n          <li :class=\"{ valid: passwordValidations.uppercase, invalid: !passwordValidations.uppercase }\">\n            At least one uppercase letter\n          </li>\n          <li :class=\"{ valid: passwordValidations.special, invalid: !passwordValidations.special }\">\n            At least one special character\n          </li>\n          <li :class=\"{ valid: passwordValidations.noUsername, invalid: !passwordValidations.noUsername }\">\n            Must not contain username\n          </li>\n        </div>\n\n        <div class=\"checkbox-group-left\">\n          <input type=\"checkbox\" id=\"terms\" v-model=\"terms\" required />\n          <label for=\"terms\">Agree with Terms of Service</label>\n        </div>\n\n        <div class=\"checkbox-group-left\">\n          <input type=\"checkbox\" id=\"emails\" v-model=\"emails\" />\n          <label for=\"emails\">Agree with us sending e-mails</label>\n        </div>\n\n        <button type=\"submit\" :disabled=\"!canRegister\">Register</button>\n      </form>\n\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n    </div>\n\n    <!-- Popup -->\n    <div v-if=\"showSuccessPopup\" class=\"popup-overlay\">\n      <div class=\"popup\">\n        <h3>Registration Successful!</h3>\n        <p>You will now be redirected to the login page.</p>\n        <button @click=\"redirectToLogin\" class=\"popup-button\">OK</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RegistrationComponent\",\n  data() {\n    return {\n      name: \"\",\n      surname: \"\",\n      dob: \"\",\n      gender: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      terms: false,\n      emails: false,\n      showPassword: false,\n      errorMessage: \"\",\n      showSuccessPopup: false, // Nieuw: Beheert de popup zichtbaarheid\n    };\n  },\n  computed: {\n    passwordValidations() {\n      const password = this.password;\n      const username = this.username;\n      return {\n        length: password.length >= 8,\n        uppercase: /[A-Z]/.test(password),\n        special: /[!@#$%^&*/,.?\":{}|<>]/.test(password),\n        noUsername: !password.toLowerCase().includes(username.toLowerCase()),\n      };\n    },\n    isPasswordValid() {\n      return (\n          this.passwordValidations.length &&\n          this.passwordValidations.uppercase &&\n          this.passwordValidations.special &&\n          this.passwordValidations.noUsername &&\n          this.password === this.confirmPassword\n      );\n    },\n    canRegister() {\n      return (\n          this.terms &&\n          this.isPasswordValid &&\n          this.name &&\n          this.surname &&\n          this.dob &&\n          this.gender &&\n          this.email &&\n          this.username &&\n          this.password &&\n          this.confirmPassword\n      );\n    },\n  },\n  methods: {\n    async register() {\n      if (!this.terms) {\n        this.errorMessage = \"You must agree with the terms of service.\";\n      } else if (!this.isPasswordValid) {\n        this.errorMessage = \"Password does not meet all the requirements.\";\n      } else {\n        this.errorMessage = \"\";\n\n        const userData = {\n          name: this.name,\n          surname: this.surname,\n          dateOfBirth: this.dob,\n          gender: this.gender,\n          email: this.email,\n          username: this.username,\n          password: this.password,\n          termsAccepted: this.terms,\n          emailsAccepted: this.emails,\n        };\n\n        try {\n          const response = await fetch(\"http://localhost:8084/api/v1/User/register\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(userData),\n          });\n\n          if (!response.ok) {\n            throw new Error(\"Failed to register user\");\n          }\n\n          // Toon popup bij succes\n          this.showSuccessPopup = true;\n        } catch (error) {\n          console.error(\"Error during registration:\", error);\n          this.errorMessage = \"Registration failed. Please try again later.\";\n        }\n      }\n    },\n    redirectToLogin() {\n      this.showSuccessPopup = false;\n      this.$router.push(\"/login\"); // Stuur door naar login pagina\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap');\n* {\n  font-family: 'Outfit', sans-serif;\n  font-optical-sizing: auto;\n  font-style: normal;\n}\n\n.page-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f3f3f3;\n}\n\n.registration-form {\n  width: 450px;\n  padding: 30px;\n  border: 2px solid #1a123b;\n  border-radius: 15px;\n  background-color: #fff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  color: #1a123b;\n  text-align: center;\n  margin-bottom: 20px;\n  font-weight: 400;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.half-width {\n  width: 48%;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.checkbox-group-left {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  justify-content: flex-start;\n}\n\n.checkbox-group-left input {\n  margin-right: 10px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.form-group-inline {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\ninput, select {\n  padding: 10px;\n  border: 2px solid #1a123b;\n  border-radius: 10px;\n  font-size: 16px;\n  color: #333;\n  margin-left: 5px;\n}\n\nbutton {\n  padding: 12px;\n  background-color: #ff9933;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n}\n\nbutton:hover {\n  background-color: #e68a00;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.password-requirements {\n  list-style-type: none;\n  padding: 0;\n  margin-top: 10px;\n  font-size: 12px;\n}\n\n.password-requirements li {\n  margin-bottom: 5px;\n}\n\n.password-requirements .valid {\n  color: green;\n}\n\n.password-requirements .invalid {\n  color: red;\n}\n\np {\n  color: green;\n  margin-top: 10px;\n  text-align: center;\n}\n\n .popup-overlay {\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100%;\n   height: 100%;\n   background: rgba(0, 0, 0, 0.6);\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   z-index: 1000;\n }\n\n.popup {\n  background: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  width: 300px;\n}\n\n.popup h3 {\n  margin: 0 0 10px;\n  font-size: 18px;\n}\n\n.popup p {\n  margin: 0 0 20px;\n  font-size: 16px;\n}\n\n.popup-button {\n  background: #6db33f;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.popup-button:hover {\n  background: #5a9e2c;\n}\n</style>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}