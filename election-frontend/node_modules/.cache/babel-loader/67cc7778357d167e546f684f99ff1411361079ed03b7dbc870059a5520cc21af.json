{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-chat\"\n};\nconst _hoisted_2 = {\n  class: \"message-box new-message-box\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  class: \"username\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"response-to\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"message-area\"\n};\nconst _hoisted_8 = {\n  class: \"message-actions\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 1,\n  class: \"comments-section\"\n};\nconst _hoisted_14 = {\n  class: \"username\"\n};\nconst _hoisted_15 = [\"onUpdate:modelValue\"];\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"chat-header\"\n  }, [_createElementVNode(\"h2\", null, \"Community Chat App\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"user-info\"\n  }, [_createElementVNode(\"span\", {\n    class: \"user-avatar\"\n  })], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    placeholder: \"type message here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMessage]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.handleFileChange && $options.handleFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"post-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.postMessage && $options.postMessage(...args))\n  }, \"Post\")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message-box\"\n    }, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n      class: \"user-info\"\n    }, [_createElementVNode(\"span\", {\n      class: \"user-avatar\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(message.username), 1 /* TEXT */), message.responseTo ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" response to @\" + _toDisplayString(message.responseTo), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), message.image ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: message.image,\n      alt: \"Attached Image\",\n      class: \"message-image\"\n    }, null, 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(message.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openComments(message.id)\n    }, \"Comments\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.respondToMessage(message.id)\n    }, \"Respond\", 8 /* PROPS */, _hoisted_10), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.likeMessage(message.id)\n    }, \"Like\", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.shareMessage(message.id)\n    }, \"Share\", 8 /* PROPS */, _hoisted_12)]), message.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(message.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: comment.id,\n        class: \"comment\"\n      }, [_createElementVNode(\"span\", _hoisted_14, \"@\" + _toDisplayString(comment.username), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.text), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => message.newComment = $event,\n      placeholder: \"Add a comment\"\n    }, null, 8 /* PROPS */, _hoisted_15), [[_vModelText, message.newComment]]), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.postComment(message.id)\n    }, \"Comment\", 8 /* PROPS */, _hoisted_16)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","newMessage","placeholder","type","onChange","args","$options","handleFileChange","accept","onClick","postMessage","_Fragment","_renderList","chatMessages","message","id","_hoisted_3","_hoisted_4","_toDisplayString","username","responseTo","_hoisted_5","_createCommentVNode","image","src","alt","_hoisted_6","_hoisted_7","text","_hoisted_8","openComments","_hoisted_9","_ctx","respondToMessage","_hoisted_10","likeMessage","_hoisted_11","shareMessage","_hoisted_12","showComments","_hoisted_13","comments","comment","_hoisted_14","newComment","_hoisted_15","postComment","_hoisted_16"],"sources":["/Users/suhayb/Documenten/cuuruuvoovii16/election-frontend/src/components/CommunityChatPage.vue"],"sourcesContent":["<template>\n  <div class=\"community-chat\">\n    <div class=\"chat-header\">\n      <h2>Community Chat App</h2>\n    </div>\n    <div class=\"message-box new-message-box\">\n      <div class=\"user-info\">\n        <span class=\"user-avatar\"></span>\n\n      </div>\n      <textarea v-model=\"newMessage\" placeholder=\"type message here...\"></textarea>\n      <input type=\"file\" @change=\"handleFileChange\" accept=\"image/*\" />\n\n\n      <button class=\"post-button\" @click=\"postMessage\">Post</button>\n    </div>\n\n\n    <div v-for=\"message in chatMessages\" :key=\"message.id\" class=\"message-box\">\n\n        <div class=\"user-info\">\n          <span class=\"user-avatar\"></span>\n\n        </div>\n      <div class=\"user-info\">\n\n        <span class=\"username\">{{ message.username }}</span>\n        <span v-if=\"message.responseTo\" class=\"response-to\">\n      response to @{{ message.responseTo }}\n    </span>\n      </div>\n      <img v-if=\"message.image\" :src=\"message.image\" alt=\"Attached Image\" class=\"message-image\" />\n      <p class=\"message-area\">{{ message.text }}</p>\n\n\n\n\n      <div class=\"message-actions\">\n        <button @click=\"openComments(message.id)\">Comments</button>\n        <button @click=\"respondToMessage(message.id)\">Respond</button>\n        <button @click=\"likeMessage(message.id)\">Like</button>\n        <button @click=\"shareMessage(message.id)\">Share</button>\n      </div>\n\n\n      <div v-if=\"message.showComments\" class=\"comments-section\">\n        <div v-for=\"comment in message.comments\" :key=\"comment.id\" class=\"comment\">\n          <span class=\"username\">@{{ comment.username }}</span>\n          <p>{{ comment.text }}</p>\n        </div>\n        <textarea v-model=\"message.newComment\" placeholder=\"Add a comment\"></textarea>\n        <button @click=\"postComment(message.id)\">Comment</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//import { mapGetters } from 'vuex';\nimport { API_URL } from \"@/config\";\n//import jwtDecode from \"jwt-decode\";\n\nexport default {\n  name: 'CommunityChatComponent',\n  props: ['communityId'],\n  data() {\n    return {\n      chatMessages: [], // Array to store chat messages\n      newMessage: '', // New message content\n      selectedFile: null, // Uploaded file\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const response = await fetch(`${API_URL}/api/communities/${this.communityId}/posts`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch posts\");\n        }\n        const posts = await response.json();\n\n        // Map response to chatMessages array\n        this.chatMessages = posts.map(post => ({\n          id: post.id, // Post ID\n          text: post.content, // Post content\n          username: post.user?.username || \"Anonymous\", // Extract `username` or default to \"Anonymous\"\n          image: post.image ? `data:image/jpeg;base64,${post.image}` : null, // Convert Base64 image\n          responseTo: post.responseTo || null, // Handle optional response field\n          comments: post.comments || [], // Ensure comments exist\n          showComments: false, // Default: hide comments section\n          newComment: \"\", // Default: empty new comment\n        }));\n\n        console.log(\"Chat messages loaded:\", this.chatMessages);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    handleFileChange(event) {\n      const file = event.target.files[0];\n      if (!file.type.startsWith('image/')) {\n        alert('Please upload a valid image file.');\n        return;\n      }\n      const maxSize = 5 * 1024 * 1024; // 5 MB\n      if (file.size > maxSize) {\n        alert('File size exceeds 5MB. Please upload a smaller file.');\n        return;\n      }\n      this.selectedFile = file;\n    },\n    async postMessage() {\n      const formData = new FormData();\n      formData.append('content', this.newMessage);\n      if (this.selectedFile) {\n        formData.append('image', this.selectedFile);\n      }\n      try {\n        const response = await fetch(`${API_URL}/api/communities/${this.communityId}/posts/create`, {\n          method: 'POST',\n          body: formData,\n        });\n        if (!response.ok) throw new Error('Failed to send message');\n        this.newMessage = '';\n        this.selectedFile = null;\n        this.fetchPosts(); // Refresh messages after posting\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    },\n    openComments(postId) {\n      const post = this.chatMessages.find(message => message.id === postId);\n      if (post) {\n        post.showComments = !post.showComments; // Toggle comments visibility\n      }\n    },\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n\n};\n</script>\n\n\n<style scoped>\n* {\n  font-family: \"Outfit\", sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\n\n.community-chat {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #F9F9F9;\n  color: #17003C;\n  width: 100vw;\n  height: 100vh;\n  padding: 1.5rem;\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  margin-bottom: 1rem;\n}\n\n.leave-button {\n  background-color: #FF9900;\n  color: white;\n  border: 7px solid #17003C;\n  padding: 0.5rem 1rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease, border-color 0.3s ease;\n  border-radius: 100px;\n}\n\n.leave-button:hover {\n  background-color: #17003C;\n  border-color: #FF9900;\n}\n\n.users-online {\n  background-color: #F1F1F1;\n  padding: 1rem;\n  border-radius: 12px;\n  margin-bottom: 1rem;\n  width: 100%;\n  max-width: 800px;\n}\n\n.users-online ul {\n  list-style: none;\n}\n\n.users-online li {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n}\n\n.user-avatar {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n}\n\n.chat-messages {\n  background-color: #F1F1F1;\n  padding: 1rem;\n  border-radius: 12px;\n  flex: 1;\n  width: 100%;\n  max-width: 800px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n}\n\n.chat-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.message-avatar {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 0.75rem;\n}\n\n.message-content {\n  background-color: #E0E0E0;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n}\n\n.own-message .message-content {\n  background-color: #D1EAFF;\n}\n\n.message-user {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.3rem;\n}\n\n.message-input {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  background-color: #F9F9F9;\n  position: sticky;\n  bottom: 0;\n}\n\n.message-input input {\n  flex: 1;\n  padding: 1rem;\n  border-radius: 50px;\n  border: 1px solid #ccc;\n  margin-right: 1rem;\n  font-size: 1.2rem;\n}\n\n.message-box {\n  background-color: #17003C;\n  color: white;\n  border-radius: 15px;\n  padding: 15px;\n  margin: 10px auto;\n  width: 90%;\n  max-width: 600px;\n}\n\n.new-message-box {\n  background-color: #17003C;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: gray;\n  margin-right: 10px;\n}\n\n.username {\n  font-weight: bold;\n  color: #FF9900;\n}\n\n.response-to {\n  font-size: 0.9em;\n  color: #FF9900;\n  margin-left: 5px;\n}\n\ntextarea {\n  width: 100%;\n  border-radius: 10px;\n  padding: 10px;\n  font-size: 1em;\n  margin: 10px 0;\n  border: none;\n}\n\n.post-button {\n  background-color: #FF9900;\n  color: white;\n  padding: 8px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.post-button:hover {\n  background-color: #E68A00;\n}\n\n/* Message Actions */\n.message-actions {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n}\n\n.message-actions button {\n  background: none;\n  border: none;\n  color: #FF9900;\n  cursor: pointer;\n  font-size: 1em;\n}\n\n.message-actions button:hover {\n  color: #E68A00;\n}\n\n/* Comments Section */\n.comments-section {\n  margin-top: 10px;\n  padding: 10px;\n  background-color: #2A1E54;\n  border-radius: 10px;\n}\n\n.comment {\n  margin-bottom: 5px;\n}\n\n.comment .username {\n  font-weight: bold;\n  color: #FF9900;\n}\n\n.comment textarea {\n  margin-top: 5px;\n}\n.user-avatar img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n.message-area{\n  background-color: white;\n  color: black;\n  padding: 10px;\n  font-size: 1em;\n  margin: 10px 0;\n}\n.message-image {\n  max-width: 40%;\n  border-radius: 10px;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAA6B;;EAmBjCA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAU;;EA1B9BC,GAAA;EA2BwCD,KAAK,EAAC;;mBA3B9C;;EAgCSA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBArClC;oBAAA;oBAAA;oBAAA;;EAAAC,GAAA;EA6CuCD,KAAK,EAAC;;;EAE7BA,KAAK,EAAC;AAAU;oBA/ChC;oBAAA;;uBACEE,mBAAA,CAqDM,OArDNC,UAqDM,G,0BApDJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACtBI,mBAAA,CAA2B,YAAvB,oBAAkB,E,sBAExBA,mBAAA,CAUM,OAVNC,UAUM,G,0BATJD,mBAAA,CAGM;IAHDJ,KAAK,EAAC;EAAW,IACpBI,mBAAA,CAAiC;IAA3BJ,KAAK,EAAC;EAAa,G,sCAG3BI,mBAAA,CAA6E;IAVnF,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUyBC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAxBF,KAAA,CAAAC,UAAU,E,GAC7BL,mBAAA,CAAiE;IAA1DO,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;IAAEG,MAAM,EAAC;qCAGrDZ,mBAAA,CAA8D;IAAtDJ,KAAK,EAAC,aAAa;IAAEiB,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,MAAI,E,sBAIvDX,mBAAA,CAmCMiB,SAAA,QArDVC,WAAA,CAkB2BZ,KAAA,CAAAa,YAAY,EAAvBC,OAAO;yBAAnBpB,mBAAA,CAmCM;MAnCgCD,GAAG,EAAEqB,OAAO,CAACC,EAAE;MAAEvB,KAAK,EAAC;kCAEzDI,mBAAA,CAGM;MAHDJ,KAAK,EAAC;IAAW,IACpBI,mBAAA,CAAiC;MAA3BJ,KAAK,EAAC;IAAa,G,sBAG7BI,mBAAA,CAMM,OANNoB,UAMM,GAJJpB,mBAAA,CAAoD,QAApDqB,UAAoD,EAAAC,gBAAA,CAA1BJ,OAAO,CAACK,QAAQ,kBAC9BL,OAAO,CAACM,UAAU,I,cAA9B1B,mBAAA,CAEG,QAFH2B,UAEG,EAFiD,gBACzC,GAAAH,gBAAA,CAAGJ,OAAO,CAACM,UAAU,oBA5BxCE,mBAAA,e,GA+BiBR,OAAO,CAACS,KAAK,I,cAAxB7B,mBAAA,CAA4F;MA/BlGD,GAAA;MA+BiC+B,GAAG,EAAEV,OAAO,CAACS,KAAK;MAAEE,GAAG,EAAC,gBAAgB;MAACjC,KAAK,EAAC;4BA/BhFkC,UAAA,KAAAJ,mBAAA,gBAgCM1B,mBAAA,CAA8C,KAA9C+B,UAA8C,EAAAT,gBAAA,CAAnBJ,OAAO,CAACc,IAAI,kBAKvChC,mBAAA,CAKM,OALNiC,UAKM,GAJJjC,mBAAA,CAA2D;MAAlDa,OAAK,EAAAV,MAAA,IAAEO,QAAA,CAAAwB,YAAY,CAAChB,OAAO,CAACC,EAAE;OAAG,UAAQ,iBAtC1DgB,UAAA,GAuCQnC,mBAAA,CAA8D;MAArDa,OAAK,EAAAV,MAAA,IAAEiC,IAAA,CAAAC,gBAAgB,CAACnB,OAAO,CAACC,EAAE;OAAG,SAAO,iBAvC7DmB,WAAA,GAwCQtC,mBAAA,CAAsD;MAA7Ca,OAAK,EAAAV,MAAA,IAAEiC,IAAA,CAAAG,WAAW,CAACrB,OAAO,CAACC,EAAE;OAAG,MAAI,iBAxCrDqB,WAAA,GAyCQxC,mBAAA,CAAwD;MAA/Ca,OAAK,EAAAV,MAAA,IAAEiC,IAAA,CAAAK,YAAY,CAACvB,OAAO,CAACC,EAAE;OAAG,OAAK,iBAzCvDuB,WAAA,E,GA6CiBxB,OAAO,CAACyB,YAAY,I,cAA/B7C,mBAAA,CAOM,OAPN8C,WAOM,I,kBANJ9C,mBAAA,CAGMiB,SAAA,QAjDdC,WAAA,CA8C+BE,OAAO,CAAC2B,QAAQ,EAA3BC,OAAO;2BAAnBhD,mBAAA,CAGM;QAHoCD,GAAG,EAAEiD,OAAO,CAAC3B,EAAE;QAAEvB,KAAK,EAAC;UAC/DI,mBAAA,CAAqD,QAArD+C,WAAqD,EAA9B,GAAC,GAAAzB,gBAAA,CAAGwB,OAAO,CAACvB,QAAQ,kBAC3CvB,mBAAA,CAAyB,WAAAsB,gBAAA,CAAnBwB,OAAO,CAACd,IAAI,iB;oDAEpBhC,mBAAA,CAA8E;MAlDtF,uBAAAG,MAAA,IAkD2Be,OAAO,CAAC8B,UAAU,GAAA7C,MAAA;MAAEG,WAAW,EAAC;4BAlD3D2C,WAAA,I,cAkD2B/B,OAAO,CAAC8B,UAAU,E,GACrChD,mBAAA,CAAyD;MAAhDa,OAAK,EAAAV,MAAA,IAAEiC,IAAA,CAAAc,WAAW,CAAChC,OAAO,CAACC,EAAE;OAAG,SAAO,iBAnDxDgC,WAAA,E,KAAAzB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}